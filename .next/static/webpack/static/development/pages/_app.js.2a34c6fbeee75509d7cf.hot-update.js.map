{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.2a34c6fbeee75509d7cf.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from \"react\"\r\nimport {createStore} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport App, {Container} from \"next/app\"\r\nimport withRedux from 'next-redux-wrapper'\r\nimport axios from 'axios'\r\nimport fire from '../config/firebaseConfig'\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GETTASKSLIST':\r\n            return {...state, tasks: [action.taskList]};\r\n            break;\r\n        case 'LOGIN':\r\n            return { ...state, isLoggedIn: true, loginErr: false, user: action.user };\r\n            break;\r\n        case 'LOGIN_ERR':\r\n            return { ...state, isLoggedIn: false, loginErr: action.msg};\r\n            break;\r\n        case 'LOGOUT':\r\n            return { ...state, isLoggedIn: false };\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n};\r\n\r\nvar initialState = {\r\n    loginErr: false,\r\n    isLoggedIn: fire.auth().isLoggedIn ? true : false,\r\n    isManager: true,\r\n    userData: {\r\n        userId: 123456789,\r\n        firstName: 'בר',\r\n        lastName: 'עמיר',\r\n        region: 'ראשון לציון',\r\n        email: 'baramir@mail.tau.ac.il',\r\n        phone: '0523668566'\r\n    },\r\n    tasks: []\r\n}\r\n\r\n\r\nconst makeStore = (initialState, options) => {\r\n    return createStore(reducer, initialState);\r\n};\r\n\r\nclass MyApp extends App {\r\n    constructor(props) {\r\n        super(props);        \r\n    }\r\n\r\n    static async getInitialProps({Component, ctx}) {\r\n        axios.get('http://localhost:5000/api/get_tasks').then((response) => \r\n        {         \r\n            ctx.store.dispatch({type: 'GETTASKSLIST', taskList: response});\r\n        });\r\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n        return {pageProps};\r\n    }\r\n\r\n    render() {\r\n        const {Component, pageProps, store} = this.props;\r\n        return (\r\n            <Container>\r\n                <Provider store={store}>\r\n                    <Component {...pageProps} />\r\n                </Provider>               \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAZA;AACA;AAeA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAlBA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;AAAA;AACA;;;;;;;AADA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAZA;AACA;AAyBA;;;;A","sourceRoot":""}