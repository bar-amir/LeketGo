{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.9bcbd811a0a0d6617dd7.hot-update.js","sources":["webpack:///./components/ModalBlock.js"],"sourcesContent":["/* ModalBlock\r\n * This component is responsible for any modal window in the app,\r\n * whether if it's a simple confirmation for an action or an entire\r\n * form for creating or editing an entry.\r\n * Each modal differs from the other by it's \"message\", therefor each\r\n * message has its own code name, as seen below.\r\n */\r\n\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Modal, ModalDialog, Button, Form, FormControl, Col, InputGroup} from 'react-bootstrap'\r\nimport setUndoTask from '../dbActions/setUndoTask'\r\nimport refresh4User from '../dbActions/refresh4User'\r\nimport setTaskReport from '../dbActions/setTaskReport'\r\nimport getTaskReports from '../dbActions/getTaskReports'\r\nimport setTaskCollected from '../dbActions/setCollected'\r\n\r\nclass ModalBlock extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            /* The ModalBlock state properties are only\r\n               relevant to the REPORT_FILL modal */\r\n            mainCourseQ: 0,\r\n            sideCourseQ: 0,\r\n            pastriesQ: 0,\r\n            pastriesS: \"\",\r\n            breadQ: 0,\r\n            breadS: \"\",\r\n            formComment: \"\",\r\n            startDate: new Date()\r\n        }\r\n        this.dateHandleChange = this.dateHandleChange.bind(this);\r\n    }\r\n\r\n    resetState() {\r\n        /* This method is only relevant\r\n           to the REPORT_FILL modal */\r\n        this.setState({\r\n            mainCourseQ: 0,\r\n            sideCourseQ: 0,\r\n            pastriesQ: 0,\r\n            pastriesS: \"\",\r\n            breadQ: 0,\r\n            breadS: \"\",\r\n            formComment: \"\"\r\n        })\r\n    }\r\n\r\n    dateHandleChange(date) {\r\n        /* This method is only relevant\r\n           to the REPORT_FILL modal */\r\n        this.setState({\r\n          startDate: date\r\n        });\r\n      }\r\n\r\n    handleChange = (e) => {\r\n        /* This method is only relevant\r\n           to the REPORT_FILL modal */\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    verifyValuesForReport() {\r\n        /* This method is only relevant\r\n           to the REPORT_FILL modal */\r\n        var isValid = true;\r\n        if (isValid) {\r\n            var numOfFields = 0;\r\n            var fields = [];\r\n            if (this.state.mainCourseQ > 0) { numOfFields++; fields.push(\"mainCourseQ\"); }\r\n            if (this.state.sideCourseQ > 0) { numOfFields++; fields.push(\"sideCourseQ\"); }\r\n            if (this.state.pastriesQ > 0) { numOfFields++; fields.push(\"pastriesQ\"); }\r\n            if (this.state.breadQ > 0) { numOfFields++; fields.push(\"breadQ\"); }\r\n            var data = {\r\n                reportFilled: true,\r\n                reportFieldNum: numOfFields,\r\n                reportComment: this.state.formComment,\r\n                collected: true\r\n            }\r\n            var dic = {\r\n                \"mainCourseQ\": 'עיקריות',\r\n                \"sideCourseQ\": 'תוספות',\r\n                \"pastriesQ\": 'מאפים',\r\n                \"breadQ\": 'לחם'\r\n            }\r\n            for (var i = 0; i < numOfFields; i++) {\r\n                data[\"foodDesc\" + (i + 1)] = dic[fields[i]];\r\n                data[\"foodContainerType\" + (i + 1)] = (fields[i] == \"mainCourseQ\" || fields[i] == \"sideCourseQ\") ? 'מיכלים' : (fields[i] == \"pastriesQ\") ? this.state.pastriesS : this.state.breadS;\r\n                data[\"foodContainerQuantity\" + (i + 1)] = this.state[fields[i]]\r\n            }\r\n            setTaskReport(this.props.modal.entries.id, data)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        /* Each modal window has the same structure:\r\n         * title - The name of the modal, should be descriptive\r\n         * body - The actual message or form of the modal\r\n         * buttons - An array of objects representing the action buttons\r\n         *           at the bottom of the modal. Each object in the array\r\n         *           should have three properties:\r\n         * onClick - The function that would be called upon clicking that button.\r\n         *           Remember! The type of this property is a FUNCTION and not a\r\n         *           function's returned value. i.e. onClick: func() is wrong,\r\n         *           should be () => func() or func without parenthesis.\r\n         * variant - This will determine the visual style of the button.\r\n         *           Should be the name of a Bootstrap's class for a button.\r\n         *           i.e. primary, secondary...\r\n         * text - The text inside the button.\r\n         */\r\n        var modal = this.props.modal;\r\n        var title = '';\r\n        var body = '';\r\n        var buttons = [];\r\n        \r\n        switch (modal.msg) {\r\n            case 'ASSIGN_TASKS_MIX':\r\n                /* Partial success when assigning tasks.\r\n                 * We still need to review this and adjust\r\n                 * according to the feedback we received.\r\n                 */\r\n                title = 'הצלחה חלקית';\r\n                body = (\r\n                    <span>\r\n                    חלק מהאיסופים שבחרת שובצו בהצלחה, וחלק לא! ניתן לראות לאילו איסופים שובצת בעמוד <Link href=\"assigned-tasks\"><a onClick={() => this.props.dispatch({ type: 'CLOSE_MODAL' })}>איסופים קרובים</a></Link>.\r\n                    </span>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'ASSIGN_TASKS_FAILED':\r\n                /* Failure when assigning tasks.\r\n                 * We still need to review this and adjust\r\n                 * according to the feedback we received.\r\n                 */\r\n                title = 'כשלון בשיבוץ האיסופים';\r\n                body = (\r\n                    <span>\r\n                    {Object.keys(modal.entries).length} שיבוץ האיסופים נכשל! אנא נסה להשתבץ לאיסופים אחרים.\r\n                    </span>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'ASSIGN_TASKS_SUCCESS':\r\n                /* Success when assigning tasks.\r\n                 * We still need to review this and adjust\r\n                 * according to the feedback we received.\r\n                 */\r\n                title = 'הצלחה';\r\n                body = (\r\n                    <span>\r\n                    {Object.keys(modal.entries).length}                     האיסופים שובצו בהצלחה! ניתן לראות את כל השיבוצים שלך בעמוד <Link href=\"assigned-tasks\"><a onClick={() => this.props.dispatch({ type: 'CLOSE_MODAL' })}>איסופים קרובים</a></Link>.\r\n                    </span>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'TASK_DONE':\r\n                /* For when a volunteer marks an assignment `done` */\r\n                title = 'האיסוף בוצע';\r\n                body = 'תודה! האיסוף סומן כבוצע. השלב הבא הוא למלא משוב.';\r\n                buttons = [\r\n                {\r\n                    onClick: () => this.props.dispatch({ type: 'OPEN_MODAL',msg: 'REPORT_FILL', entries: modal.entries }),\r\n                    variant: 'primary',\r\n                    text: 'דיווח'\r\n                },\r\n                {\r\n                    onClick: () => {\r\n                        this.props.dispatch({ type: 'CLOSE_MODAL' })\r\n                        setTaskCollected(modal.entries.id);\r\n                        refresh4User(this.props.dispatch, this.props.userData.region, this.props.userData.uid);\r\n                    },\r\n                    variant: 'secondary',\r\n                    text: 'מאוחר יותר'\r\n                }    \r\n                ];\r\n                break;\r\n            case 'REPORT_FILL':\r\n                /* Form for filling a task report. */\r\n                title = 'משוב על איסוף שבוצע';\r\n                body = (\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>עיקריות</Form.Label>\r\n                                <InputGroup>\r\n                            <FormControl id=\"mainCourseQ\"\r\n                                onChange={this.handleChange}\r\n                                    placeholder=\"כמות\"\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                    <InputGroup.Text>מיכלים</InputGroup.Text>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>תוספות</Form.Label>\r\n                                <InputGroup>\r\n                            <FormControl id=\"sideCourseQ\"\r\n                                onChange={this.handleChange}\r\n                                    placeholder=\"כמות\"\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                    <InputGroup.Text>מיכלים</InputGroup.Text>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>מאפים</Form.Label>\r\n                                <InputGroup>\r\n                            <FormControl id=\"pastriesQ\"\r\n                                onChange={this.handleChange}\r\n                                    placeholder=\"כמות\"\r\n                                    />\r\n                            <Form.Control as=\"select\" id=\"pastriesS\"\r\n                                onChange={this.handleChange}>\r\n                                        <option>בחירת סוג</option>\r\n                                        <option>ארגזים</option>\r\n                                        <option>שקיות סופר</option>\r\n                                        <option>שקים</option>\r\n                                    </Form.Control>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>לחם</Form.Label>\r\n                                <InputGroup>\r\n                            <FormControl id=\"breadQ\"\r\n                                onChange={this.handleChange}\r\n                                    placeholder=\"כמות\"\r\n                                    />\r\n                            <Form.Control as=\"select\" id=\"breadS\"\r\n                                onChange={this.handleChange}>\r\n                                        <option>בחירת סוג</option>\r\n                                        <option>ארגזים</option>\r\n                                        <option>שקיות סופר</option>\r\n                                        <option>שקים</option>\r\n                                    </Form.Control>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>הערות נוספות</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\"\r\n                            id=\"formComment\" onChange={this.handleChange}/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => {\r\n                            this.props.dispatch({ type: 'CLOSE_MODAL' });\r\n                            this.verifyValuesForReport(modal);\r\n                            this.resetState();\r\n                            getTaskReports(this.props.dispatch, this.props.userData.uid)                        },\r\n                            variant: 'primary',\r\n                        text: 'שליחה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'REPORT_UNDONE':\r\n                /* Form for when a volunteer reports a missed task */\r\n                title = 'משוב על איסוף שלא בוצע';\r\n                body = (\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>מדוע לא בוצע האיסוף?</Form.Label>\r\n                                <Form.Control as=\"select\">\r\n                                    <option>לא נותר מזון</option>\r\n                                    <option>לא נעניתי</option>\r\n                                    <option>סיבה אחרת</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>הערות נוספות</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\"/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'primary',\r\n                        text: 'שליחה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'ביטול'\r\n                    }];\r\n                break;\r\n            case 'TASK_NOTES':\r\n                /* A modal showing extra notes for a certain task */\r\n                title = 'הערות';\r\n                body = (\r\n                    <span>{modal.entries.notes}</span>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'TASK_CANCEL':\r\n                /* For when a volunteer wants to unassign a task */\r\n                title = 'הסרת שיבוץ';\r\n                body = 'הסרת השיבוץ תחזיר את משימת האיסוף לרשימת המשימות הפנויות.';\r\n                buttons = [\r\n                    {\r\n                        onClick: () => {\r\n                            setUndoTask(modal.entries.id)\r\n                            this.props.dispatch({ type: 'CLOSE_MODAL' })\r\n                            refresh4User(this.props.dispatch, this.props.userData.region, this.props.userData.uid);\r\n                        },\r\n                        variant: 'danger',\r\n                        text: 'הסרה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'ביטול'\r\n                    }];\r\n                break;\r\n            case 'ADD_USER':\r\n                /* For adding a volunteer (Admins only) */\r\n                title = 'הוספת מתנדב';\r\n                body = <span></span>;\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'ADD_USER_CSV':\r\n                /* For adding multiple volunteers via uploading a .CSV file (Admins only) */\r\n                title = 'הוספת מתנדבים מקובץ';\r\n                body = <span></span>;\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'EDIT_USER':\r\n                /* For editing volunteer's details (Admins only) */\r\n                var user = modal.entries;\r\n                title = 'עריכת פרטי מתנדב';\r\n                body =\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>שם פרטי</Form.Label>\r\n                                    <Form.Control value={user.firstName} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>שם משפחה</Form.Label>\r\n                                    <Form.Control value={user.lastName} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>תעודת זהות</Form.Label>\r\n                                    <Form.Control value={user.tz} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>אזור איסוף</Form.Label>\r\n                                    <Form.Control as=\"select\">\r\n                                        <option>ראשון לציון</option>\r\n                                        <option>רעננה</option>\r\n                                        <option>תל אביב</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>כתובת דואר אלקטרוני</Form.Label>\r\n                                    <Form.Control type=\"email\" value={user.email}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>מספר טלפון</Form.Label>\r\n                                    <Form.Control type=\"email\" value={user.phone}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>רחוב ומספר</Form.Label>\r\n                                    <Form.Control value={user.street} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>עיר מגורים</Form.Label>\r\n                                    <Form.Control value={user.city} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>;\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'primary',\r\n                        text: 'שליחה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'ביטול'\r\n                    }];\r\n                break;\r\n            case 'ADD_TASK':\r\n                /* For adding a task (Admins only) */\r\n                title = 'הוספת איסוף';\r\n                body = (\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>תאריך</Form.Label><br />\r\n                                <FormControl type=\"date\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>שעה</Form.Label><br />\r\n                                <FormControl pattern=\"[0-9]{2}:[0-9]{2}\" type=\"time\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>עיר</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>רחוב ומספר</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>ספק</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>שם איש קשר</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>טלפון איש קשר</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                );\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'primary',\r\n                        text: 'הוספה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'EDIT_TASK':\r\n                    /* For adding a task (Admins only) */\r\n                    let task = modal.entries;\r\n                    let date = task.timestamp.toDate();\r\n                    let year = date.getFullYear();\r\n                    let month = date.getMonth();\r\n                    let day = date.getDay();\r\n                    \r\n                    title = 'עריכת איסוף';\r\n                    body = (\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>תאריך</Form.Label><br />\r\n                                    <FormControl type=\"date\" value={`${year}-11-11`}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>שעה</Form.Label><br />\r\n                                    <FormControl pattern=\"[0-9]{2}:[0-9]{2}\" type=\"time\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>עיר</Form.Label>\r\n                                    <Form.Control value={task.city}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>רחוב ומספר</Form.Label>\r\n                                    <Form.Control value={task.address}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>ספק</Form.Label>\r\n                                    <Form.Control value={task.name}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>שם איש קשר</Form.Label>\r\n                                    <Form.Control value={task['contact name']}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>טלפון איש קשר</Form.Label>\r\n                                    <Form.Control value={task['contact number']}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    );\r\n                    buttons = [\r\n                        {\r\n                            onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                            variant: 'primary',\r\n                            text: 'עריכה'\r\n                        },\r\n                        {\r\n                            onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                            variant: 'secondary',\r\n                            text: 'ביטול'\r\n                        }];\r\n                    break;\r\n            case 'ADD_TASK_CSV':\r\n                /* For adding multiple tasks via uploading a .CSV file (Admins only) */\r\n                title = 'הוספת איסופים מקובץ';\r\n                body = <span></span>;\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n            case 'EXPORT_TASK_CSV':\r\n                /* For exporting reports (Admins only) */\r\n                title = 'ייצוא דוח';\r\n                body = <span></span>;\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'CLOSE_MODAL' }),\r\n                        variant: 'secondary',\r\n                        text: 'סגירה'\r\n                    }];\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Modal show={modal.isOpen} onHide={() => this.props.dispatch({ type: 'CLOSE_MODAL' })}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {body}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {buttons.map((button) => {\r\n                        return (\r\n                            <Button key={button.text} variant={button.variant} onClick={button.onClick}>\r\n                            {button.text}\r\n                            </Button>\r\n                        );\r\n                    })}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => state)(ModalBlock);"],"mappings":"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ACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAtdA;AACA;AAwdA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;;;;AAjlBA;AACA;AAmlBA;AAAA;AAAA;;;;A","sourceRoot":""}