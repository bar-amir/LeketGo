{"version":3,"file":"static/webpack/static\\development\\pages\\assigned-tasks.js.976bf8eaef9d144eb899.hot-update.js","sources":["webpack:///./components/Entry.js","webpack:///./components/TableBlock.js"],"sourcesContent":["import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Button, ButtonGroup} from 'react-bootstrap'\r\nimport fire from '../config/firebaseConfig'\r\n\r\nclass Entry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditable: false\r\n        }\r\n        this.toggleSelection = this.toggleSelection.bind(this);\r\n        this.toggleEditable = this.toggleEditable.bind(this);\r\n    };\r\n\r\n    getDataValues(entry) {\r\n        switch (this.props.type) {\r\n            case 'tasks':\r\n                let options = { weekday: 'short', year: 'numeric', month: 'numeric', day: 'numeric' };\r\n                let date = entry.timestamp.toDate();\r\n                return {\r\n                    date: date.toLocaleDateString('he-IL', options),\r\n                    time: date.getHours()+':'+('0'+date.getMinutes()).slice(-2),\r\n                    city: entry.city,\r\n                    name: entry.name,\r\n                    street: entry.address,\r\n                    actions: 'ACTIONS',\r\n                    contactName: entry.address,\r\n                    contactNumber: entry.address\r\n                }\r\n            case 'users':\r\n                return {\r\n                    uid: entry.id,\r\n                    firstName: entry.firstName,\r\n                    lastName: entry.lastName,\r\n                    region: entry.region,\r\n                    email: entry.email,\r\n                    phone: entry.phone,\r\n                    tz: entry.tz\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggleSelection() {\r\n        if (this.props.isSelectable) {\r\n            this.props.selectCallback(this.props.entry, !this.props.isSelected);\r\n        }\r\n    }\r\n\r\n    toggleEditable() {\r\n        this.setState({isEditable: !this.state.isEditable});\r\n    }\r\n\r\n    render() {\r\n        var buttons = [];\r\n        switch (this.props.page) {\r\n            case 'assignedTasks':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_NOTES', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: 'הערות'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_NOTES', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: 'בוצע'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_CANCEL', entries: this.props.entry }),\r\n                        color: 'outline-secondary',\r\n                        text: 'הסרה'\r\n                    },\r\n                ];\r\n                break;\r\n            case 'taskReports':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL',msg: 'REPORT_FILL' }),\r\n                        color: 'outline-primary',\r\n                        text: 'דיווח'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REPORT_UNDONE' }),\r\n                        color: 'outline-secondary',\r\n                        text: 'לא בוצע'\r\n                    },\r\n                ];\r\n                break;\r\n            case 'adminUsers':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'EDIT_USER', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: 'עריכה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'RESET_PASSWORD', entries: this.props.entry}),\r\n                        color: 'outline-secondary',\r\n                        text: 'איפוס סיסמה'\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'RESET_PASSWORD', entries: this.props.entry}),\r\n                        color: 'outline-secondary',\r\n                        text: 'מחיקה'\r\n                    }\r\n                ];\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <tr className={(this.props.isSelected ? 'table-primary' : '') + (this.props.isSelectable ? ' entry-selectable' : '')}>\r\n                {this.props.tableColumns.map((column) => {\r\n                    if(column != 'actions'){\r\n                        return (\r\n                            <td onClick={this.toggleSelection} key={column}>\r\n                                {this.getDataValues(this.props.entry)[column]}\r\n                            </td>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                        <td key={column}>\r\n                            <ButtonGroup>\r\n                                {buttons.map((button) => {\r\n                                return (\r\n                                    <Button key={button.text} onClick={button.onClick} variant={button.color}>{button.text}</Button>\r\n                                    );\r\n                                })}\r\n                            </ButtonGroup>\r\n                        </td>);\r\n                    }\r\n                })}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => state)(Entry);","import React from 'react'\r\nimport Entry from '../components/Entry'\r\nimport { connect } from \"react-redux\"\r\nimport { Table, Button, ButtonGroup, InputGroup, Form, Col, Row, DropdownButton, Dropdown, FormControl, Navbar } from 'react-bootstrap'\r\nimport setAssignedTasks from '../dbActions/setAssignedTasks'\r\n\r\nclass TableBlock extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttableColumns: this.getTableColumns(),\r\n\t\t\tentrySelectedCounter: 0,\r\n\t\t\tselectedEntries: {},\r\n\t\t\tcolumnNames: {\r\n\t\t\t\t'actions': 'פעולות',\r\n\t\t\t\t'date': 'תאריך',\r\n\t\t\t\t'time': 'שעה',\r\n\t\t\t\t'city': 'עיר',\r\n\t\t\t\t'name': 'ספק',\r\n\t\t\t\t'uid': 'uid',\r\n\t\t\t\t'firstName': 'שם פרטי',\r\n\t\t\t\t'lastName': 'שם משפחה',\r\n\t\t\t\t'region': 'אזור',\r\n\t\t\t\t'email': 'דוא\"ל',\r\n\t\t\t\t'tz': 'תעודת זהות',\r\n\t\t\t\t'street': 'רחוב',\r\n\t\t\t\t'contactName': 'איש קשר',\r\n\t\t\t\t'contactNumber': 'טלפון'\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.selectCallback = this.selectCallback.bind(this);\r\n\t\tthis.cancelSelection = this.cancelSelection.bind(this);\r\n\t\tthis.assignTasks = this.assignTasks.bind(this);\r\n\t}\r\n\r\n\tgetTableColumns() {\r\n\t\tswitch (this.props.page) {\r\n\t\t\tcase 'index':\r\n\t\t\t\treturn ['date', 'time', 'street', 'city', 'name'];\r\n\t\t\tcase 'assignedTasks':\r\n\t\t\t\treturn ['date', 'time', 'street', 'city', 'name', 'contactName', 'contactNumber', 'actions'];\r\n\t\t\tcase 'taskReports':\r\n\t\t\t\treturn ['date', 'street', 'city', 'name', 'actions'];\r\n\t\t\tcase 'adminUsers':\r\n\t\t\t\treturn ['tz', 'firstName', 'lastName', 'email', 'phone', 'region', 'actions'];\r\n\t\t\tcase 'adminTasks':\r\n\t\t\t\t\treturn ['date', 'time', 'street', 'city', 'name', 'actions'];\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tselectCallback(entry, isSelected) {\r\n\t\tlet newSelectedEntries = {...this.state.selectedEntries};\r\n\t\tif(isSelected){\r\n\t\t\tnewSelectedEntries[entry.id] = {...entry};\r\n\t\t\tthis.setState({\r\n\t\t\t\tentrySelectedCounter: this.state.entrySelectedCounter + 1,\r\n\t\t\t\tselectedEntries: newSelectedEntries\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdelete newSelectedEntries[entry.id];\r\n\t\t\tthis.setState({\r\n\t\t\t\tentrySelectedCounter: this.state.entrySelectedCounter - 1,\r\n\t\t\t\tselectedEntries: newSelectedEntries\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcancelSelection() {\r\n\t\tthis.setState({\r\n\t\t\tentrySelectedCounter: 0,\r\n\t\t\tselectedEntries: {}\r\n\t\t});\r\n\t}\r\n\r\n\tassignTasks() {\r\n        var taskIDs = [];\r\n        for (var taskID in this.state.selectedEntries) {\r\n            taskIDs.push(taskID)         \r\n        }\r\n        setAssignedTasks(this.props.dispatch, taskIDs, this.props.userData.uid, this.state.entrySelectedCounter, this.state.selectedEntries)\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet actionsBar = '';\r\n\t\tif (this.props.isSelectable && this.state.entrySelectedCounter > 0) {\r\n\t\t\tactionsBar = \r\n\t\t\t\t<Navbar bg='light' fixed='bottom'>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button onClick={this.assignTasks} variant='primary'>שיבוץ {this.state.entrySelectedCounter} איסופים</Button>\r\n\t\t\t\t\t\t<Button onClick={this.cancelSelection} variant='secondary'>ביטול</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Navbar>;\r\n\t\t}\r\n\t\tif (this.props.isSearchable) {\r\n\t\t\tactionsBar = \r\n\t\t\t\t<Navbar bg='light' fixed='bottom'>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">הוספת משתמש</button>\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\">הוספה מקובץ</button></div>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tvariant='outline-secondary'\r\n\t\t\t\t\t\t\t\ttitle='Dropdown'\r\n\t\t\t\t\t\t\t\tdrop='up'>\r\n\t\t\t\t\t\t\t\t\t<option>שם מלא</option>\r\n\t\t\t\t\t\t\t\t\t<option>תעודת זהות</option>\r\n\t\t\t\t\t\t\t\t\t<option>כתובת מגורים</option>\r\n\t\t\t\t\t\t\t\t\t<option>מספר טלפון</option>\r\n\t\t\t\t\t\t\t\t\t<option>דואר אלקטרוני</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t<FormControl aria-describedby=\"basic-addon1\" />\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Navbar>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table hover responsive>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{this.state.tableColumns.map((column) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<th scope=\"col\" key={column}>{this.state.columnNames[column]}</th>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.props.data.map((entry) => {\r\n\t\t\t\t\t\t\tlet isSelected = false;\r\n\t\t\t\t\t\t\tif (this.state.selectedEntries[entry.id])\r\n\t\t\t\t\t\t\t\tisSelected = true;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Entry page={this.props.page} isSelected={isSelected} isSelectable={this.props.isSelectable} type={this.props.type} key={entry.id} selectCallback={this.selectCallback} entry={entry} tableColumns={this.state.tableColumns}/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t{actionsBar}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(state => state)(TableBlock);"],"mappings":"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","sourceRoot":""}