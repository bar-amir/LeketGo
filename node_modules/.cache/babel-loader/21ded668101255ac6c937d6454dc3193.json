{"ast":null,"code":"import fire from '../config/firebaseConfig';\nimport XLSX from 'xlsx';\nexport default function handleFileUpload(file) {\n  var reader = new FileReader();\n\n  reader.onload = function (evt) {\n    var bstr = evt.target.result;\n    var wb = XLSX.read(bstr, {\n      type: 'binary'\n    });\n    var wsname = wb.SheetNames[0];\n    var ws = wb.Sheets[wsname];\n    var data = XLSX.utils.sheet_to_csv(ws, {\n      header: 1\n    }); //addTasksToDB(data);\n\n    console.log(\"Data from file was read succesfully.\");\n  };\n\n  reader.readAsBinaryString(file);\n  console.log(file);\n}\n\nfunction addTasksToDB(data) {\n  var taskCollection = fire.firestore().collection('tasks');\n  var rows = data.split(/[\\r\\n|\\n]+/);\n\n  for (var i = 1; i < rows.length; i++) {\n    var row = rows[i];\n    taskCollection.doc(row.taskId + '-' + row.date).set({\n      name: row.name,\n      timestamp: admin.firestore.Timestamp.fromDate(new Date(row.date + 'T' + row.time)),\n      city: row.city,\n      address: row.address,\n      \"contact number\": row[\"contact number\"],\n      \"contact name\": row[\"contact name\"],\n      notes: row.notes,\n      region: row.region,\n      longitude: Number(row.longitude),\n      latitude: Number(row.latitude),\n      volunteerUid: null,\n      reportFilled: false,\n      collected: false\n    });\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Oz\\Desktop\\leket\\leket\\dbActions\\addTasksFromFile.js"],"names":["fire","XLSX","handleFileUpload","file","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_csv","header","console","log","readAsBinaryString","addTasksToDB","taskCollection","firestore","collection","rows","split","i","length","row","doc","taskId","date","set","name","timestamp","admin","Timestamp","fromDate","Date","time","city","address","notes","region","longitude","Number","latitude","volunteerUid","reportFilled","collected"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC1C,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,GAAD,EAAS;AACrB,QAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAxB;AACA,QAAMC,EAAE,GAAGV,IAAI,CAACW,IAAL,CAAUJ,IAAV,EAAgB;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAX;AAEA,QAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;AACA,QAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;AAEA,QAAMI,IAAI,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,YAAX,CAAwBJ,EAAxB,EAA4B;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAA5B,CAAb,CAPqB,CAQrB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH,GAVD;;AAWAnB,EAAAA,MAAM,CAACoB,kBAAP,CAA0BrB,IAA1B;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACH;;AAED,SAASsB,YAAT,CAAsBP,IAAtB,EAA4B;AACxB,MAAMQ,cAAc,GAAG1B,IAAI,CAAC2B,SAAL,GAAiBC,UAAjB,CAA4B,OAA5B,CAAvB;AACA,MAAIC,IAAI,GAAGX,IAAI,CAACY,KAAL,CAAW,YAAX,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAd;AACAL,IAAAA,cAAc,CAACQ,GAAf,CAAmBD,GAAG,CAACE,MAAJ,GAAa,GAAb,GAAmBF,GAAG,CAACG,IAA1C,EAAgDC,GAAhD,CAAoD;AAChDC,MAAAA,IAAI,EAAEL,GAAG,CAACK,IADsC;AAEhDC,MAAAA,SAAS,EAAEC,KAAK,CAACb,SAAN,CAAgBc,SAAhB,CAA0BC,QAA1B,CAAmC,IAAIC,IAAJ,CAASV,GAAG,CAACG,IAAJ,GAAW,GAAX,GAAiBH,GAAG,CAACW,IAA9B,CAAnC,CAFqC;AAGhDC,MAAAA,IAAI,EAAEZ,GAAG,CAACY,IAHsC;AAIhDC,MAAAA,OAAO,EAAEb,GAAG,CAACa,OAJmC;AAKhD,wBAAkBb,GAAG,CAAC,gBAAD,CAL2B;AAMhD,sBAAgBA,GAAG,CAAC,cAAD,CAN6B;AAOhDc,MAAAA,KAAK,EAAEd,GAAG,CAACc,KAPqC;AAQhDC,MAAAA,MAAM,EAAEf,GAAG,CAACe,MARoC;AAShDC,MAAAA,SAAS,EAAEC,MAAM,CAACjB,GAAG,CAACgB,SAAL,CAT+B;AAUhDE,MAAAA,QAAQ,EAAED,MAAM,CAACjB,GAAG,CAACkB,QAAL,CAVgC;AAWhDC,MAAAA,YAAY,EAAE,IAXkC;AAYhDC,MAAAA,YAAY,EAAE,KAZkC;AAahDC,MAAAA,SAAS,EAAE;AAbqC,KAApD;AAeH;AACJ","sourcesContent":["import fire from '../config/firebaseConfig';\r\nimport XLSX from 'xlsx';\r\n\r\nexport default function handleFileUpload(file){\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (evt) => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n        //addTasksToDB(data);\r\n        console.log(\"Data from file was read succesfully.\");\r\n    };\r\n    reader.readAsBinaryString(file);\r\n    console.log(file);\r\n}\r\n\r\nfunction addTasksToDB(data) {\r\n    const taskCollection = fire.firestore().collection('tasks');\r\n    var rows = data.split(/[\\r\\n|\\n]+/);\r\n    for (let i = 1; i < rows.length; i++) {\r\n        var row = rows[i];\r\n        taskCollection.doc(row.taskId + '-' + row.date).set({\r\n            name: row.name,\r\n            timestamp: admin.firestore.Timestamp.fromDate(new Date(row.date + 'T' + row.time)),\r\n            city: row.city,\r\n            address: row.address,\r\n            \"contact number\": row[\"contact number\"],\r\n            \"contact name\": row[\"contact name\"],\r\n            notes: row.notes,\r\n            region: row.region,\r\n            longitude: Number(row.longitude),\r\n            latitude: Number(row.latitude),\r\n            volunteerUid: null,\r\n            reportFilled: false,\r\n            collected: false\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}