{"ast":null,"code":"import fire from '../config/firebaseConfig';\nimport { getStartDate } from './dates';\nexport default function getAssigned(dispatch, uid) {\n  var db = fire.firestore();\n  db.collection(\"tasks\").where(\"volunteerUid\", \"==\", uid).where(\"timestamp\", \">\", getStartDate()).where(\"collected\", \"==\", false).get().then(function (querySnapshot) {\n    var tasks = [];\n    querySnapshot.forEach(function (doc) {\n      var task = doc.data();\n      task.id = doc.id;\n      tasks.push(task);\n    });\n    dispatch({\n      type: 'ASSIGNEDTASKS',\n      tasks: tasks\n    });\n  });\n}","map":{"version":3,"sources":["C:\\Users\\Oz\\Desktop\\leket\\leket\\dbActions\\getAssignedTasks.js"],"names":["fire","getStartDate","getAssigned","dispatch","uid","db","firestore","collection","where","get","then","querySnapshot","tasks","forEach","doc","task","data","id","push","type"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,eAAe,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,GAA/B,EAAoC;AAC/C,MAAMC,EAAE,GAAGL,IAAI,CAACM,SAAL,EAAX;AAEAD,EAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EACKC,KADL,CACW,cADX,EAC2B,IAD3B,EACiCJ,GADjC,EAEKI,KAFL,CAEW,WAFX,EAEwB,GAFxB,EAE6BP,YAAY,EAFzC,EAGKO,KAHL,CAGW,WAHX,EAGwB,IAHxB,EAG8B,KAH9B,EAIKC,GAJL,GAKKC,IALL,CAKU,UAACC,aAAD,EAAmB;AACrB,QAAIC,KAAK,GAAG,EAAZ;AACAD,IAAAA,aAAa,CAACE,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACjC,UAAIC,IAAI,GAAGD,GAAG,CAACE,IAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,EAAL,GAAUH,GAAG,CAACG,EAAd;AACAL,MAAAA,KAAK,CAACM,IAAN,CAAWH,IAAX;AACH,KAJD;AAKAZ,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAE,eAAR;AAAyBP,MAAAA,KAAK,EAAEA;AAAhC,KAAD,CAAR;AACH,GAbL;AAcH","sourcesContent":["import fire from '../config/firebaseConfig'\r\nimport { getStartDate } from './dates'\r\n\r\nexport default function getAssigned(dispatch, uid) {\r\n    const db = fire.firestore();\r\n\r\n    db.collection(\"tasks\")\r\n        .where(\"volunteerUid\", \"==\", uid)\r\n        .where(\"timestamp\", \">\", getStartDate() )\r\n        .where(\"collected\", \"==\", false)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            var tasks = [];\r\n            querySnapshot.forEach(function (doc) {\r\n                var task = doc.data();\r\n                task.id = doc.id;\r\n                tasks.push(task);\r\n            });\r\n            dispatch({ type: 'ASSIGNEDTASKS', tasks: tasks });\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}