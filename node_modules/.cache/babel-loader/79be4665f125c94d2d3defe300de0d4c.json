{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Oz\\\\Desktop\\\\leket\\\\leket\\\\components\\\\Entry.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Button, Dropdown, Form, ButtonGroup } from 'react-bootstrap';\nimport fire from '../config/firebaseConfig';\n\nvar Entry =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Entry, _React$Component);\n\n  function Entry(props) {\n    var _this;\n\n    _classCallCheck(this, Entry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Entry).call(this, props));\n    _this.state = {\n      isEditable: false\n    };\n    _this.toggleSelection = _this.toggleSelection.bind(_assertThisInitialized(_this));\n    _this.toggleEditable = _this.toggleEditable.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Entry, [{\n    key: \"getDataValues\",\n    value: function getDataValues(entry) {\n      switch (this.props.type) {\n        case 'tasks':\n          var options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n          };\n          var date = entry.timestamp.toDate();\n          return {\n            date: date.toLocaleDateString('he-IL', options),\n            time: date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2),\n            city: entry.city,\n            name: entry.name,\n            street: entry.address,\n            fullAddress: entry.address + ', ' + entry.city,\n            actions: 'ACTIONS',\n            contactName: entry['contact name'],\n            contactNumber: React.createElement(\"a\", {\n              style: {\n                whiteSpace: 'nowrap'\n              },\n              href: 'tel: ' + entry['contact number'],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, entry['contact number']),\n            checkBox: this.props.isSelected ? React.createElement(Form.Check, {\n              custom: true,\n              checked: true,\n              label: \"\",\n              type: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }) : React.createElement(Form.Check, {\n              custom: true,\n              label: \"\",\n              type: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            })\n          };\n\n        case 'users':\n          return {\n            uid: entry.id,\n            firstName: entry.firstName,\n            lastName: entry.lastName,\n            fullName: entry.firstName + '' + entry.lastName,\n            region: entry.region,\n            email: entry.email,\n            phone: entry.phone,\n            tz: entry.tz\n          };\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"toggleSelection\",\n    value: function toggleSelection() {\n      if (this.props.isSelectable) {\n        this.props.selectCallback(this.props.entry, !this.props.isSelected);\n      }\n    }\n  }, {\n    key: \"toggleEditable\",\n    value: function toggleEditable() {\n      this.setState({\n        isEditable: !this.state.isEditable\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var buttons = [];\n\n      switch (this.props.page) {\n        case 'assignedTasks':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_NOTES',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-sticky-note fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }), \"\\u05D4\\u05E2\\u05E8\\u05D5\\u05EA\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_DONE',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-check fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }), \"\\u05D1\\u05D5\\u05E6\\u05E2\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_CANCEL',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-times fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }), \"\\u05D4\\u05E1\\u05E8\\u05D4\")\n          }];\n          break;\n\n        case 'taskReports':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REPORT_FILL',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-check fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }), \"\\u05D3\\u05D9\\u05D5\\u05D5\\u05D7\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REPORT_UNDONE'\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-times fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }), \"\\u05DC\\u05D0 \\u05D1\\u05D5\\u05E6\\u05E2\")\n          }];\n          break;\n\n        case 'adminUsers':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'EDIT_USER',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-edit fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }), \"\\u05E2\\u05E8\\u05D9\\u05DB\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'RESET_PASSWORD',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-unlock-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }), \"\\u05D0\\u05D9\\u05E4\\u05D5\\u05E1 \\u05E1\\u05D9\\u05E1\\u05DE\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REMOVE_USER',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-trash-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }), \"\\u05DE\\u05D7\\u05D9\\u05E7\\u05D4\")\n          }];\n          break;\n\n        case 'adminTasks':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'EDIT_TASK',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-edit fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }), \"\\u05E2\\u05E8\\u05D9\\u05DB\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_STATUS',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-question fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }), \"\\u05E1\\u05D8\\u05D8\\u05D5\\u05E1\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REMOVE_TASK',\n                entries: _this2.props.entry\n              });\n            },\n            color: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-trash-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }), \"\\u05DE\\u05D7\\u05D9\\u05E7\\u05D4\")\n          }];\n          break;\n      }\n\n      return React.createElement(\"tr\", {\n        className: (this.props.isSelected ? 'table-primary' : '') + (this.props.isSelectable ? ' entry-selectable' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.props.tableColumns.map(function (column) {\n        if (column != 'actions') {\n          return React.createElement(\"td\", {\n            onClick: _this2.toggleSelection,\n            key: column,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, _this2.getDataValues(_this2.props.entry)[column]);\n        } else {\n          switch (_this2.props.page) {\n            case 'assignedTasks':\n              return React.createElement(\"td\", {\n                key: column,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: {\n                  whiteSpace: 'nowrap'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, React.createElement(Dropdown, {\n                width: \"200\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, React.createElement(Dropdown.Toggle, {\n                variant: \"secondary\",\n                id: \"dropdown-basic\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 152\n                },\n                __self: this\n              }, buttons.map(function (button) {\n                return React.createElement(Dropdown.Item, {\n                  key: button.text,\n                  onClick: button.onClick,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 155\n                  },\n                  __self: this\n                }, button.text);\n              })))));\n\n            case 'adminUsers':\n              return React.createElement(\"td\", {\n                key: column,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 162\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: {\n                  whiteSpace: 'nowrap'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163\n                },\n                __self: this\n              }, React.createElement(Dropdown, {\n                width: \"200\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163\n                },\n                __self: this\n              }, React.createElement(Dropdown.Toggle, {\n                variant: \"secondary\",\n                id: \"dropdown-basic\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164\n                },\n                __self: this\n              }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167\n                },\n                __self: this\n              }, buttons.map(function (button) {\n                return React.createElement(Dropdown.Item, {\n                  key: button.text,\n                  onClick: button.onClick,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 170\n                  },\n                  __self: this\n                }, button.text);\n              })))));\n\n            case 'adminTasks':\n              return React.createElement(\"td\", {\n                key: column,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 177\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: {\n                  whiteSpace: 'nowrap'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178\n                },\n                __self: this\n              }, React.createElement(Dropdown, {\n                width: \"200\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178\n                },\n                __self: this\n              }, React.createElement(Dropdown.Toggle, {\n                variant: \"secondary\",\n                id: \"dropdown-basic\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179\n                },\n                __self: this\n              }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 182\n                },\n                __self: this\n              }, buttons.map(function (button) {\n                return React.createElement(Dropdown.Item, {\n                  key: button.text,\n                  onClick: button.onClick,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 185\n                  },\n                  __self: this\n                }, button.text);\n              })))));\n\n            case 'taskReports':\n              return React.createElement(\"td\", {\n                key: column,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: {\n                  whiteSpace: 'nowrap'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              }, React.createElement(Dropdown, {\n                width: \"200\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              }, React.createElement(Dropdown.Toggle, {\n                variant: \"secondary\",\n                id: \"dropdown-basic\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196\n                },\n                __self: this\n              }, buttons.map(function (button) {\n                return React.createElement(Dropdown.Item, {\n                  key: button.text,\n                  onClick: button.onClick,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 199\n                  },\n                  __self: this\n                }, button.text);\n              })))));\n\n            default:\n              return React.createElement(\"td\", {\n                key: column,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 206\n                },\n                __self: this\n              }, React.createElement(ButtonGroup, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207\n                },\n                __self: this\n              }, buttons.map(function (button) {\n                return React.createElement(Button, {\n                  key: button.text,\n                  onClick: button.onClick,\n                  variant: button.color,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 210\n                  },\n                  __self: this\n                }, button.text);\n              })));\n          }\n        }\n      }));\n    }\n  }]);\n\n  return Entry;\n}(React.Component);\n\nexport default connect(function (state) {\n  return state;\n})(Entry);","map":{"version":3,"sources":["C:\\Users\\Oz\\Desktop\\leket\\leket\\components\\Entry.js"],"names":["React","connect","Button","Dropdown","Form","ButtonGroup","fire","Entry","props","state","isEditable","toggleSelection","bind","toggleEditable","entry","type","options","weekday","year","month","day","date","timestamp","toDate","toLocaleDateString","time","getHours","getMinutes","slice","city","name","street","address","fullAddress","actions","contactName","contactNumber","whiteSpace","checkBox","isSelected","uid","id","firstName","lastName","fullName","region","email","phone","tz","isSelectable","selectCallback","setState","buttons","page","onClick","dispatch","msg","entries","color","text","tableColumns","map","column","getDataValues","button","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Button, Dropdown, Form, ButtonGroup} from 'react-bootstrap'\r\nimport fire from '../config/firebaseConfig'\r\n\r\nclass Entry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditable: false\r\n        }\r\n        this.toggleSelection = this.toggleSelection.bind(this);\r\n        this.toggleEditable = this.toggleEditable.bind(this);\r\n    };\r\n\r\n    getDataValues(entry) {\r\n        switch (this.props.type) {\r\n            case 'tasks':\r\n                let options = { weekday: 'short', year: 'numeric', month: 'numeric', day: 'numeric' };\r\n                let date = entry.timestamp.toDate();\r\n                return {\r\n                    date: date.toLocaleDateString('he-IL', options),\r\n                    time: date.getHours()+':'+('0'+date.getMinutes()).slice(-2),\r\n                    city: entry.city,\r\n                    name: entry.name,\r\n                    street: entry.address,\r\n                    fullAddress: entry.address + ', ' + entry.city,\r\n                    actions: 'ACTIONS',\r\n                    contactName: entry['contact name'],\r\n                    contactNumber: <a style={{whiteSpace: 'nowrap'}} href={'tel: '+ entry['contact number']}>{entry['contact number']}</a>,\r\n                    checkBox: this.props.isSelected ? <Form.Check custom checked label='' type='checkbox' /> : <Form.Check custom label='' type='checkbox' />\r\n                }\r\n            case 'users':\r\n                return {\r\n                    uid: entry.id,\r\n                    firstName: entry.firstName,\r\n                    lastName: entry.lastName,\r\n                    fullName: entry.firstName + '' + entry.lastName,\r\n                    region: entry.region,\r\n                    email: entry.email,\r\n                    phone: entry.phone,\r\n                    tz: entry.tz\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggleSelection() {\r\n        if (this.props.isSelectable) {\r\n            this.props.selectCallback(this.props.entry, !this.props.isSelected);\r\n        }\r\n    }\r\n\r\n    toggleEditable() {\r\n        this.setState({isEditable: !this.state.isEditable});\r\n    }\r\n\r\n    render() {\r\n        var buttons = [];\r\n        switch (this.props.page) {\r\n            case 'assignedTasks':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_NOTES', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: <span><i className=\"far fa-sticky-note fa-fw\"></i>הערות</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_DONE', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: <span><i className=\"far fa-calendar-check fa-fw\"></i>בוצע</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_CANCEL', entries: this.props.entry }),\r\n                        color: 'outline-secondary',\r\n                        text: <span><i className=\"far fa-calendar-times fa-fw\"></i>הסרה</span>\r\n                    },\r\n                ];\r\n                break;\r\n            case 'taskReports':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REPORT_FILL', entries: this.props.entry }),\r\n                        color: 'outline-primary',\r\n                        text: <span><i className=\"far fa-calendar-check fa-fw\"></i>דיווח</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REPORT_UNDONE' }),\r\n                        color: 'outline-secondary',\r\n                        text: <span><i className=\"far fa-calendar-times fa-fw\"></i>לא בוצע</span>\r\n                    },\r\n                ];\r\n                break;\r\n            case 'adminUsers':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'EDIT_USER', entries: this.props.entry}),\r\n                        color: 'outline-primary',\r\n                        text: <span><i className=\"far fa-edit fa-fw\"></i>עריכה</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'RESET_PASSWORD', entries: this.props.entry}),\r\n                        color: 'outline-secondary',\r\n                        text: <span><i className=\"fas fa-unlock-alt fa-fw\"></i>איפוס סיסמה</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REMOVE_USER', entries: this.props.entry}),\r\n                        color: 'outline-secondary',\r\n                        text: <span><i className=\"far fa-trash-alt fa-fw\"></i>מחיקה</span>\r\n                    }\r\n                ];\r\n                break;\r\n                case 'adminTasks':\r\n                        buttons = [\r\n                            {\r\n                                onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'EDIT_TASK', entries: this.props.entry}),\r\n                                color: 'outline-primary',\r\n                                text: <span><i className=\"far fa-edit fa-fw\"></i>עריכה</span>\r\n                            },\r\n                            {\r\n                                onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_STATUS', entries: this.props.entry}),\r\n                                color: 'outline-secondary',\r\n                                text: <span><i className=\"fas fa-question fa-fw\"></i>סטטוס</span>\r\n                            },\r\n                            {\r\n                                onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REMOVE_TASK', entries: this.props.entry}),\r\n                                color: 'outline-secondary',\r\n                                text: <span><i className=\"far fa-trash-alt fa-fw\"></i>מחיקה</span>\r\n                            }\r\n                        ];\r\n                        break;\r\n        }\r\n\r\n        return (\r\n            <tr className={(this.props.isSelected ? 'table-primary' : '') + (this.props.isSelectable ? ' entry-selectable' : '')}>\r\n                {this.props.tableColumns.map((column) => {\r\n                    if(column != 'actions'){\r\n                        return (\r\n                            <td onClick={this.toggleSelection} key={column}>\r\n                                {this.getDataValues(this.props.entry)[column]}\r\n                            </td>\r\n                        );\r\n                    } else {\r\n                        switch (this.props.page){\r\n                            case 'assignedTasks':\r\n                                return <td key={column}>\r\n                                <span style={{whiteSpace: 'nowrap'}}><Dropdown width='200'>\r\n                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                        פעולות\r\n                                    </Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                    {buttons.map((button) => {\r\n                                            return (\r\n                                                <Dropdown.Item key={button.text} onClick={button.onClick}>{button.text}</Dropdown.Item>\r\n                                                );\r\n                                            })}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown></span>\r\n                            </td>;\r\n                            case 'adminUsers':\r\n                                return <td key={column}>\r\n                                <span style={{whiteSpace: 'nowrap'}}><Dropdown width='200'>\r\n                                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                        פעולות\r\n                                    </Dropdown.Toggle>\r\n                                    <Dropdown.Menu>\r\n                                    {buttons.map((button) => {\r\n                                            return (\r\n                                                <Dropdown.Item key={button.text} onClick={button.onClick}>{button.text}</Dropdown.Item>\r\n                                                );\r\n                                            })}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown></span>\r\n                            </td>;\r\n                            case 'adminTasks':\r\n                                    return <td key={column}>\r\n                                    <span style={{whiteSpace: 'nowrap'}}><Dropdown width='200'>\r\n                                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                            פעולות\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                        {buttons.map((button) => {\r\n                                                return (\r\n                                                    <Dropdown.Item key={button.text} onClick={button.onClick}>{button.text}</Dropdown.Item>\r\n                                                    );\r\n                                                })}\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown></span>\r\n                                </td>;\r\n                            case 'taskReports':\r\n                                return <td key={column}><span style={{whiteSpace: 'nowrap'}}><Dropdown width='200'>\r\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                    פעולות\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                {buttons.map((button) => {\r\n                                        return (\r\n                                            <Dropdown.Item key={button.text} onClick={button.onClick}>{button.text}</Dropdown.Item>\r\n                                            );\r\n                                        })}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown></span></td>;\r\n                            default:\r\n                                return (\r\n                                    <td key={column}>\r\n                                        <ButtonGroup>\r\n                                            {buttons.map((button) => {\r\n                                            return (\r\n                                                <Button key={button.text} onClick={button.onClick} variant={button.color}>{button.text}</Button>\r\n                                                );\r\n                                            })}\r\n                                        </ButtonGroup>\r\n                                    </td>);\r\n                        }\r\n                    }\r\n                })}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => state)(Entry);"]},"metadata":{},"sourceType":"module"}