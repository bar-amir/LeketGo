{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* ModalBlock\r\n * This component is responsible for any modal window in the app,\r\n * whether if it's a simple confirmation for an action or an entire\r\n * form for creating or editing an entry.\r\n * Each modal differs from the other by it's \"message\", therefor each\r\n * message has its own code name, as seen below.\r\n */\nimport Link from 'next/link';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalDialog, Button, Form, FormControl, Col, InputGroup } from 'react-bootstrap';\nimport setUndoTask from '../dbActions/setUndoTask';\nimport refresh4User from '../dbActions/refresh4User';\nimport setTaskReport from '../dbActions/setTaskReport';\nimport getTaskReports from '../dbActions/getTaskReports';\nimport setTaskCollected from '../dbActions/setCollected';\n\nvar ModalBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalBlock, _React$Component);\n\n  function ModalBlock(props) {\n    var _this;\n\n    _classCallCheck(this, ModalBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalBlock).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      /* This method is only relevant\r\n         to the REPORT_FILL modal */\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    });\n\n    _this.state = {\n      /* The ModalBlock state properties are only\r\n         relevant to the REPORT_FILL modal */\n      mainCourseQ: 0,\n      sideCourseQ: 0,\n      pastriesQ: 0,\n      pastriesS: \"\",\n      breadQ: 0,\n      breadS: \"\",\n      formComment: \"\",\n      startDate: new Date()\n    };\n    _this.dateHandleChange = _this.dateHandleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalBlock, [{\n    key: \"resetState\",\n    value: function resetState() {\n      /* This method is only relevant\r\n         to the REPORT_FILL modal */\n      this.setState({\n        mainCourseQ: 0,\n        sideCourseQ: 0,\n        pastriesQ: 0,\n        pastriesS: \"\",\n        breadQ: 0,\n        breadS: \"\",\n        formComment: \"\"\n      });\n    }\n  }, {\n    key: \"dateHandleChange\",\n    value: function dateHandleChange(date) {\n      /* This method is only relevant\r\n         to the REPORT_FILL modal */\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"verifyValuesForReport\",\n    value: function verifyValuesForReport() {\n      /* This method is only relevant\r\n         to the REPORT_FILL modal */\n      var isValid = true;\n\n      if (isValid) {\n        var numOfFields = 0;\n        var fields = [];\n\n        if (this.state.mainCourseQ > 0) {\n          numOfFields++;\n          fields.push(\"mainCourseQ\");\n        }\n\n        if (this.state.sideCourseQ > 0) {\n          numOfFields++;\n          fields.push(\"sideCourseQ\");\n        }\n\n        if (this.state.pastriesQ > 0) {\n          numOfFields++;\n          fields.push(\"pastriesQ\");\n        }\n\n        if (this.state.breadQ > 0) {\n          numOfFields++;\n          fields.push(\"breadQ\");\n        }\n\n        var data = {\n          reportFilled: true,\n          reportFieldNum: numOfFields,\n          reportComment: this.state.formComment,\n          collected: true\n        };\n        var dic = {\n          \"mainCourseQ\": 'עיקריות',\n          \"sideCourseQ\": 'תוספות',\n          \"pastriesQ\": 'מאפים',\n          \"breadQ\": 'לחם'\n        };\n\n        for (var i = 0; i < numOfFields; i++) {\n          data[\"foodDesc\" + (i + 1)] = dic[fields[i]];\n          data[\"foodContainerType\" + (i + 1)] = fields[i] == \"mainCourseQ\" || fields[i] == \"sideCourseQ\" ? 'מיכלים' : fields[i] == \"pastriesQ\" ? this.state.pastriesS : this.state.breadS;\n          data[\"foodContainerQuantity\" + (i + 1)] = this.state[fields[i]];\n        }\n\n        setTaskReport(this.props.modal.entries.id, data);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* Each modal window has the same structure:\r\n       * title - The name of the modal, should be descriptive\r\n       * body - The actual message or form of the modal\r\n       * buttons - An array of objects representing the action buttons\r\n       *           at the bottom of the modal. Each object in the array\r\n       *           should have three properties:\r\n       * onClick - The function that would be called upon clicking that button.\r\n       *           Remember! The type of this property is a FUNCTION and not a\r\n       *           function's returned value. i.e. onClick: func() is wrong,\r\n       *           should be () => func() or func without parenthesis.\r\n       * variant - This will determine the visual style of the button.\r\n       *           Should be the name of a Bootstrap's class for a button.\r\n       *           i.e. primary, secondary...\r\n       * text - The text inside the button.\r\n       * \r\n       * ATTENTION: In switch-case, curly braces are usually not needed.\r\n       *            However, when declaring variables inside a case, you should\r\n       *            Use a 'let' declaration and wrap the case inside a block,\r\n       *            as seen in a few of the cases below. DO NOT REMOVE THEM. \r\n       */\n      var modal = this.props.modal; // Just for keeping things shorter\n\n      var title = '';\n      var body = '';\n      var buttons = [];\n\n      switch (modal.msg) {\n        case 'ASSIGN_TASKS_MIX':\n          /* Partial success when assigning tasks.\r\n           * We still need to review this and adjust\r\n           * according to the feedback we received.\r\n           */\n          title = 'הצלחה חלקית';\n          body = React.createElement(\"span\", null, \"\\u05D7\\u05DC\\u05E7 \\u05DE\\u05D4\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E9\\u05D1\\u05D7\\u05E8\\u05EA \\u05E9\\u05D5\\u05D1\\u05E6\\u05D5 \\u05D1\\u05D4\\u05E6\\u05DC\\u05D7\\u05D4, \\u05D5\\u05D7\\u05DC\\u05E7 \\u05DC\\u05D0! \\u05E0\\u05D9\\u05EA\\u05DF \\u05DC\\u05E8\\u05D0\\u05D5\\u05EA \\u05DC\\u05D0\\u05D9\\u05DC\\u05D5 \\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E9\\u05D5\\u05D1\\u05E6\\u05EA \\u05D1\\u05E2\\u05DE\\u05D5\\u05D3 \", React.createElement(Link, {\n            href: \"assigned-tasks\"\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            }\n          }, \"\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E7\\u05E8\\u05D5\\u05D1\\u05D9\\u05DD\")), \".\");\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'ASSIGN_TASKS_FAILED':\n          /* Failure when assigning tasks.\r\n           * We still need to review this and adjust\r\n           * according to the feedback we received.\r\n           */\n          title = 'כשלון בשיבוץ האיסופים';\n          body = React.createElement(\"span\", null, _Object$keys(modal.entries).length, \" \\u05E9\\u05D9\\u05D1\\u05D5\\u05E5 \\u05D4\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E0\\u05DB\\u05E9\\u05DC! \\u05D0\\u05E0\\u05D0 \\u05E0\\u05E1\\u05D4 \\u05DC\\u05D4\\u05E9\\u05EA\\u05D1\\u05E5 \\u05DC\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05D0\\u05D7\\u05E8\\u05D9\\u05DD.\");\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'ASSIGN_TASKS_SUCCESS':\n          /* Success when assigning tasks.\r\n           * We still need to review this and adjust\r\n           * according to the feedback we received.\r\n           */\n          title = 'הצלחה';\n          body = React.createElement(\"span\", null, _Object$keys(modal.entries).length, \"                     \\u05D4\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E9\\u05D5\\u05D1\\u05E6\\u05D5 \\u05D1\\u05D4\\u05E6\\u05DC\\u05D7\\u05D4! \\u05E0\\u05D9\\u05EA\\u05DF \\u05DC\\u05E8\\u05D0\\u05D5\\u05EA \\u05D0\\u05EA \\u05DB\\u05DC \\u05D4\\u05E9\\u05D9\\u05D1\\u05D5\\u05E6\\u05D9\\u05DD \\u05E9\\u05DC\\u05DA \\u05D1\\u05E2\\u05DE\\u05D5\\u05D3 \", React.createElement(Link, {\n            href: \"assigned-tasks\"\n          }, React.createElement(\"a\", {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            }\n          }, \"\\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD \\u05E7\\u05E8\\u05D5\\u05D1\\u05D9\\u05DD\")), \".\");\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'TASK_DONE':\n          /* For when a volunteer marks an assignment `done` */\n          title = 'האיסוף בוצע';\n          body = 'תודה! האיסוף סומן כבוצע. השלב הבא הוא למלא משוב.';\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REPORT_FILL',\n                entries: modal.entries\n              });\n            },\n            variant: 'primary',\n            text: 'דיווח'\n          }, {\n            onClick: function onClick() {\n              _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n\n              setTaskCollected(modal.entries.id);\n              refresh4User(_this2.props.dispatch, _this2.props.userData.region, _this2.props.userData.uid);\n            },\n            variant: 'secondary',\n            text: 'מאוחר יותר'\n          }, {\n            onClick: function onClick() {\n              _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'ביטול פעולה'\n          }];\n          break;\n\n        case 'REPORT_FILL':\n          /* Form for filling a task report. */\n          title = 'משוב על איסוף שבוצע';\n          body = React.createElement(Form, null, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E2\\u05D9\\u05E7\\u05E8\\u05D9\\u05D5\\u05EA\"), React.createElement(InputGroup, null, React.createElement(FormControl, {\n            id: \"mainCourseQ\",\n            onChange: this.handleChange,\n            placeholder: \"\\u05DB\\u05DE\\u05D5\\u05EA\"\n          }), React.createElement(InputGroup.Append, null, React.createElement(InputGroup.Text, null, \"\\u05DE\\u05D9\\u05DB\\u05DC\\u05D9\\u05DD\"))))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05EA\\u05D5\\u05E1\\u05E4\\u05D5\\u05EA\"), React.createElement(InputGroup, null, React.createElement(FormControl, {\n            id: \"sideCourseQ\",\n            onChange: this.handleChange,\n            placeholder: \"\\u05DB\\u05DE\\u05D5\\u05EA\"\n          }), React.createElement(InputGroup.Append, null, React.createElement(InputGroup.Text, null, \"\\u05DE\\u05D9\\u05DB\\u05DC\\u05D9\\u05DD\"))))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05DE\\u05D0\\u05E4\\u05D9\\u05DD\"), React.createElement(InputGroup, null, React.createElement(FormControl, {\n            id: \"pastriesQ\",\n            onChange: this.handleChange,\n            placeholder: \"\\u05DB\\u05DE\\u05D5\\u05EA\"\n          }), React.createElement(Form.Control, {\n            as: \"select\",\n            id: \"pastriesS\",\n            onChange: this.handleChange\n          }, React.createElement(\"option\", null, \"\\u05D1\\u05D7\\u05D9\\u05E8\\u05EA \\u05E1\\u05D5\\u05D2\"), React.createElement(\"option\", null, \"\\u05D0\\u05E8\\u05D2\\u05D6\\u05D9\\u05DD\"), React.createElement(\"option\", null, \"\\u05E9\\u05E7\\u05D9\\u05D5\\u05EA \\u05E1\\u05D5\\u05E4\\u05E8\"), React.createElement(\"option\", null, \"\\u05E9\\u05E7\\u05D9\\u05DD\"))))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05DC\\u05D7\\u05DD\"), React.createElement(InputGroup, null, React.createElement(FormControl, {\n            id: \"breadQ\",\n            onChange: this.handleChange,\n            placeholder: \"\\u05DB\\u05DE\\u05D5\\u05EA\"\n          }), React.createElement(Form.Control, {\n            as: \"select\",\n            id: \"breadS\",\n            onChange: this.handleChange\n          }, React.createElement(\"option\", null, \"\\u05D1\\u05D7\\u05D9\\u05E8\\u05EA \\u05E1\\u05D5\\u05D2\"), React.createElement(\"option\", null, \"\\u05D0\\u05E8\\u05D2\\u05D6\\u05D9\\u05DD\"), React.createElement(\"option\", null, \"\\u05E9\\u05E7\\u05D9\\u05D5\\u05EA \\u05E1\\u05D5\\u05E4\\u05E8\"), React.createElement(\"option\", null, \"\\u05E9\\u05E7\\u05D9\\u05DD\"))))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05D4\\u05E2\\u05E8\\u05D5\\u05EA \\u05E0\\u05D5\\u05E1\\u05E4\\u05D5\\u05EA\"), React.createElement(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\",\n            id: \"formComment\",\n            onChange: this.handleChange\n          }))));\n          buttons = [{\n            onClick: function onClick() {\n              _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n\n              _this2.verifyValuesForReport(modal);\n\n              _this2.resetState();\n\n              getTaskReports(_this2.props.dispatch, _this2.props.userData.uid);\n            },\n            variant: 'primary',\n            text: 'שליחה'\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'REPORT_UNDONE':\n          /* Form for when a volunteer reports a missed task */\n          title = 'משוב על איסוף שלא בוצע';\n          body = React.createElement(Form, null, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05DE\\u05D3\\u05D5\\u05E2 \\u05DC\\u05D0 \\u05D1\\u05D5\\u05E6\\u05E2 \\u05D4\\u05D0\\u05D9\\u05E1\\u05D5\\u05E3?\"), React.createElement(Form.Control, {\n            as: \"select\"\n          }, React.createElement(\"option\", null, \"\\u05DC\\u05D0 \\u05E0\\u05D5\\u05EA\\u05E8 \\u05DE\\u05D6\\u05D5\\u05DF\"), React.createElement(\"option\", null, \"\\u05DC\\u05D0 \\u05E0\\u05E2\\u05E0\\u05D9\\u05EA\\u05D9\"), React.createElement(\"option\", null, \"\\u05E1\\u05D9\\u05D1\\u05D4 \\u05D0\\u05D7\\u05E8\\u05EA\")))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05D4\\u05E2\\u05E8\\u05D5\\u05EA \\u05E0\\u05D5\\u05E1\\u05E4\\u05D5\\u05EA\"), React.createElement(Form.Control, {\n            as: \"textarea\",\n            rows: \"3\"\n          }))));\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'primary',\n            text: 'שליחה'\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'ביטול'\n          }];\n          break;\n\n        case 'TASK_NOTES':\n          /* A modal showing extra notes for a certain task */\n          title = 'הערות';\n          body = React.createElement(\"span\", null, modal.entries.notes);\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'TASK_CANCEL':\n          /* For when a volunteer wants to unassign a task */\n          title = 'הסרת שיבוץ';\n          body = 'הסרת השיבוץ תחזיר את משימת האיסוף לרשימת המשימות הפנויות.';\n          buttons = [{\n            onClick: function onClick() {\n              setUndoTask(modal.entries.id);\n\n              _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n\n              refresh4User(_this2.props.dispatch, _this2.props.userData.region, _this2.props.userData.uid);\n            },\n            variant: 'danger',\n            text: 'הסרה'\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'ביטול'\n          }];\n          break;\n\n        case 'ADD_USER':\n          /* For adding a volunteer (Admins only) */\n          title = 'הוספת מתנדב';\n          body = React.createElement(\"span\", null);\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'ADD_USER_CSV':\n          /* For adding multiple volunteers via uploading a .CSV file (Admins only) */\n          title = 'הוספת מתנדבים מקובץ';\n          body = React.createElement(\"span\", null);\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'EDIT_USER':\n          {\n            /* For editing volunteer's details (Admins only) */\n            var user = modal.entries;\n            title = 'עריכת פרטי מתנדב';\n            body = React.createElement(Form, null, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05E9\\u05DD \\u05E4\\u05E8\\u05D8\\u05D9\"), React.createElement(Form.Control, {\n              value: user.firstName\n            }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05D4\"), React.createElement(Form.Control, {\n              value: user.lastName\n            }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05EA\\u05E2\\u05D5\\u05D3\\u05EA \\u05D6\\u05D4\\u05D5\\u05EA\"), React.createElement(Form.Control, {\n              value: user.tz\n            }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05D0\\u05D6\\u05D5\\u05E8 \\u05D0\\u05D9\\u05E1\\u05D5\\u05E3\"), React.createElement(Form.Control, {\n              as: \"select\"\n            }, React.createElement(\"option\", null, \"\\u05E8\\u05D0\\u05E9\\u05D5\\u05DF \\u05DC\\u05E6\\u05D9\\u05D5\\u05DF\"), React.createElement(\"option\", null, \"\\u05E8\\u05E2\\u05E0\\u05E0\\u05D4\"), React.createElement(\"option\", null, \"\\u05EA\\u05DC \\u05D0\\u05D1\\u05D9\\u05D1\")))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05DB\\u05EA\\u05D5\\u05D1\\u05EA \\u05D3\\u05D5\\u05D0\\u05E8 \\u05D0\\u05DC\\u05E7\\u05D8\\u05E8\\u05D5\\u05E0\\u05D9\"), React.createElement(Form.Control, {\n              type: \"email\",\n              value: user.email\n            }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), React.createElement(Form.Control, {\n              type: \"email\",\n              value: user.phone\n            }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D5\\u05DE\\u05E1\\u05E4\\u05E8\"), React.createElement(Form.Control, {\n              value: user.street\n            })), React.createElement(Form.Group, {\n              as: Col\n            }, React.createElement(Form.Label, null, \"\\u05E2\\u05D9\\u05E8 \\u05DE\\u05D2\\u05D5\\u05E8\\u05D9\\u05DD\"), React.createElement(Form.Control, {\n              value: user.city\n            }))));\n            buttons = [{\n              onClick: function onClick() {\n                return _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n              },\n              variant: 'primary',\n              text: 'שליחה'\n            }, {\n              onClick: function onClick() {\n                return _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n              },\n              variant: 'secondary',\n              text: 'ביטול'\n            }];\n            break;\n          }\n\n        case 'REMOVE_USER':\n          {\n            /* For deleting a user (Admins only) */\n            var _user = modal.entries;\n            title = 'סגירת חשבון מתנדב';\n            body = \"\\u05E1\\u05D2\\u05D9\\u05E8\\u05EA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF \\u05D4\\u05DE\\u05EA\\u05E0\\u05D3\\u05D1 \".concat(_user.firstName, \" \").concat(_user.lastName, \": \\u05DE\\u05EA\\u05E0\\u05D3\\u05D1 \\u05E9\\u05E0\\u05DE\\u05D7\\u05E7 \\u05DE\\u05D4\\u05DE\\u05E2\\u05E8\\u05DB\\u05EA \\u05DC\\u05D0 \\u05D9\\u05D5\\u05DB\\u05DC \\u05DC\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8. \\u05EA\\u05D9\\u05E2\\u05D5\\u05D3 \\u05D4\\u05E4\\u05E2\\u05D9\\u05DC\\u05D5\\u05EA \\u05E9\\u05DC\\u05D5 \\u05D9\\u05D9\\u05E9\\u05DE\\u05E8 \\u05D5\\u05E0\\u05D9\\u05EA\\u05DF \\u05D9\\u05D4\\u05D9\\u05D4 \\u05DC\\u05D4\\u05E4\\u05E2\\u05D9\\u05DC \\u05DE\\u05D7\\u05D3\\u05E9 \\u05D0\\u05EA \\u05D4\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9.\");\n            buttons = [{\n              onClick: function onClick() {\n                setUndoTask(modal.entries.id);\n\n                _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n\n                refresh4User(_this2.props.dispatch, _this2.props.userData.region, _this2.props.userData.uid);\n              },\n              variant: 'danger',\n              text: 'סגירת חשבון'\n            }, {\n              onClick: function onClick() {\n                return _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n              },\n              variant: 'secondary',\n              text: 'ביטול'\n            }];\n            break;\n          }\n\n        case 'RESET_PASSWORD':\n          {\n            /* For deleting a user (Admins only) */\n            var _user2 = modal.entries;\n            title = 'איפוס סיסמה למתנדב';\n            body = \"\\u05D0\\u05D9\\u05E4\\u05D5\\u05E1 \\u05D4\\u05E1\\u05D9\\u05E1\\u05DE\\u05D4 \\u05DC\\u05DE\\u05EA\\u05E0\\u05D3\\u05D1 \".concat(_user2.firstName, \" \").concat(_user2.lastName, \": \\u05D9\\u05D9\\u05E9\\u05DC\\u05D7 \\u05DE\\u05D9\\u05D9\\u05DC \\u05DC\\u05DB\\u05EA\\u05D5\\u05D1\\u05EA\\u05D5 \").concat(_user2.email, \" \\u05D5\\u05D3\\u05E8\\u05DB\\u05D5 \\u05D9\\u05EA\\u05D1\\u05E7\\u05E9 \\u05DC\\u05D4\\u05D6\\u05D9\\u05DF \\u05E1\\u05D9\\u05E1\\u05DE\\u05D4 \\u05D7\\u05D3\\u05E9\\u05D4. \\u05D9\\u05E9 \\u05DC\\u05D5\\u05D5\\u05D3\\u05D0 \\u05E2\\u05DD \\u05D4\\u05DE\\u05EA\\u05E0\\u05D3\\u05D1 \\u05E9\\u05DB\\u05EA\\u05D5\\u05D1\\u05EA \\u05D4\\u05DE\\u05D9\\u05D9\\u05DC \\u05D4\\u05DE\\u05D5\\u05D6\\u05E0\\u05EA \\u05D1\\u05DE\\u05E2\\u05E8\\u05DB\\u05EA \\u05D4\\u05D9\\u05D0 \\u05D0\\u05DB\\u05DF \\u05DB\\u05EA\\u05D5\\u05D1\\u05EA\\u05D5 \\u05D4\\u05E4\\u05E2\\u05D9\\u05DC\\u05D4.\");\n            buttons = [{\n              onClick: function onClick() {\n                setUndoTask(modal.entries.id);\n\n                _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n\n                refresh4User(_this2.props.dispatch, _this2.props.userData.region, _this2.props.userData.uid);\n              },\n              variant: 'danger',\n              text: 'איפוס סיסמה'\n            }, {\n              onClick: function onClick() {\n                return _this2.props.dispatch({\n                  type: 'CLOSE_MODAL'\n                });\n              },\n              variant: 'secondary',\n              text: 'ביטול'\n            }];\n            break;\n          }\n\n        case 'ADD_TASK':\n          /* For adding a task (Admins only) */\n          title = 'הוספת איסוף';\n          body = React.createElement(Form, null, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"), React.createElement(\"br\", null), React.createElement(FormControl, {\n            type: \"date\"\n          })), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E9\\u05E2\\u05D4\"), React.createElement(\"br\", null), React.createElement(FormControl, {\n            pattern: \"[0-9]{2}:[0-9]{2}\",\n            type: \"time\"\n          }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E2\\u05D9\\u05E8\"), React.createElement(Form.Control, null)), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D5\\u05DE\\u05E1\\u05E4\\u05E8\"), React.createElement(Form.Control, null))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E1\\u05E4\\u05E7\"), React.createElement(Form.Control, null))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E9\\u05DD \\u05D0\\u05D9\\u05E9 \\u05E7\\u05E9\\u05E8\"), React.createElement(Form.Control, null)), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05D8\\u05DC\\u05E4\\u05D5\\u05DF \\u05D0\\u05D9\\u05E9 \\u05E7\\u05E9\\u05E8\"), React.createElement(Form.Control, null))));\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'primary',\n            text: 'הוספה'\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'EDIT_TASK':\n          /* For adding a task (Admins only) */\n          var task = modal.entries;\n          var date = task.timestamp.toDate();\n          var year = date.getFullYear();\n          var month = ('0' + date.getMonth()).slice(-2);\n          var day = ('0' + date.getDate()).slice(-2);\n          var time = date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2);\n          title = 'עריכת איסוף';\n          body = React.createElement(Form, null, React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA\"), React.createElement(\"br\", null), React.createElement(FormControl, {\n            type: \"date\",\n            value: \"\".concat(year, \"-\").concat(month, \"-\").concat(day)\n          })), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E9\\u05E2\\u05D4\"), React.createElement(\"br\", null), React.createElement(FormControl, {\n            pattern: \"[0-9]{2}:[0-9]{2}\",\n            type: \"time\",\n            value: time\n          }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E2\\u05D9\\u05E8\"), React.createElement(Form.Control, {\n            value: task.city\n          })), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D5\\u05DE\\u05E1\\u05E4\\u05E8\"), React.createElement(Form.Control, {\n            value: task.address\n          }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E1\\u05E4\\u05E7\"), React.createElement(Form.Control, {\n            value: task.name\n          }))), React.createElement(Form.Row, null, React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05E9\\u05DD \\u05D0\\u05D9\\u05E9 \\u05E7\\u05E9\\u05E8\"), React.createElement(Form.Control, {\n            value: task['contact name']\n          })), React.createElement(Form.Group, {\n            as: Col\n          }, React.createElement(Form.Label, null, \"\\u05D8\\u05DC\\u05E4\\u05D5\\u05DF \\u05D0\\u05D9\\u05E9 \\u05E7\\u05E9\\u05E8\"), React.createElement(Form.Control, {\n            value: task['contact number']\n          }))));\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'primary',\n            text: 'עריכה'\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'ביטול'\n          }];\n          break;\n\n        case 'ADD_TASK_CSV':\n          /* For adding multiple tasks via uploading a .CSV file (Admins only) */\n          title = 'הוספת איסופים מקובץ';\n          body = React.createElement(\"span\", null);\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n\n        case 'EXPORT_TASK_CSV':\n          /* For exporting reports (Admins only) */\n          title = 'ייצוא דוח';\n          body = React.createElement(\"span\", null);\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'CLOSE_MODAL'\n              });\n            },\n            variant: 'secondary',\n            text: 'סגירה'\n          }];\n          break;\n      }\n\n      return React.createElement(Modal, {\n        show: modal.isOpen,\n        onHide: function onHide() {\n          return _this2.props.dispatch({\n            type: 'CLOSE_MODAL'\n          });\n        }\n      }, React.createElement(Modal.Header, {\n        closeButton: true\n      }, React.createElement(Modal.Title, null, title)), React.createElement(Modal.Body, null, body), React.createElement(Modal.Footer, null, buttons.map(function (button) {\n        return React.createElement(Button, {\n          key: button.text,\n          variant: button.variant,\n          onClick: button.onClick\n        }, button.text);\n      })));\n    }\n  }]);\n\n  return ModalBlock;\n}(React.Component);\n\nexport default connect(function (state) {\n  return state;\n})(ModalBlock);","map":null,"metadata":{},"sourceType":"module"}