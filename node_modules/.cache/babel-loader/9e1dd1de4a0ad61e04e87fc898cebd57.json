{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Entry from '../components/Entry';\nimport { connect } from \"react-redux\";\nimport { Table, CardColumns, Card, Button, ButtonGroup, InputGroup, Form, Col, Row, DropdownButton, Dropdown, FormControl, Navbar } from 'react-bootstrap';\nimport setAssignedTasks from '../dbActions/setAssignedTasks';\nimport handleFileUpload from '../dbActions/addTasksFromFile';\n\nvar TableBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableBlock, _React$Component);\n\n  function TableBlock(props) {\n    var _this;\n\n    _classCallCheck(this, TableBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableBlock).call(this, props));\n    _this.state = {\n      tableColumns: _this.getTableColumns(),\n      entrySelectedCounter: 0,\n      selectedEntries: {},\n      columnNames: {\n        'actions': 'פעולות',\n        'date': 'תאריך',\n        'time': 'שעה',\n        'city': 'עיר',\n        'fullAddress': 'כתובת',\n        'fullAddressWithButtons': 'כתובת',\n        'name': 'ספק',\n        'uid': 'uid',\n        'firstName': 'שם פרטי',\n        'lastName': 'שם משפחה',\n        'fullName': 'שם מלא',\n        'region': 'אזור',\n        'email': 'דוא\"ל',\n        'tz': 'תעודת זהות',\n        'street': 'רחוב ומספר',\n        'contactName': 'שם',\n        'contactNumber': 'טלפון',\n        'checkBox': '',\n        'status': '',\n        'phone': 'טלפון'\n      },\n      searchValue: '',\n      searchField: _this.props.page == 'adminUsers' ? 'firstName' : 'name'\n    };\n    _this.selectCallback = _this.selectCallback.bind(_assertThisInitialized(_this));\n    _this.cancelSelection = _this.cancelSelection.bind(_assertThisInitialized(_this));\n    _this.assignTasks = _this.assignTasks.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TableBlock, [{\n    key: \"getTableColumns\",\n    value: function getTableColumns() {\n      switch (this.props.page) {\n        case 'index':\n          return ['checkBox', 'date', 'time', 'city', 'name'];\n\n        case 'assignedTasks':\n          return ['date', 'time', 'fullAddressWithButtons', 'name', 'contactName', 'contactNumber', 'actions'];\n\n        case 'taskReports':\n          return ['date', 'time', 'fullAddressWithButtons', 'name', 'contactName', 'contactNumber', 'actions'];\n\n        case 'adminUsers':\n          return ['tz', 'firstName', 'lastName', 'email', 'phone', 'region', 'actions'];\n\n        case 'adminTasks':\n          return ['status', 'date', 'time', 'street', 'city', 'name', 'actions'];\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"selectCallback\",\n    value: function selectCallback(entry, isSelected) {\n      var newSelectedEntries = _objectSpread({}, this.state.selectedEntries);\n\n      if (isSelected) {\n        newSelectedEntries[entry.id] = _objectSpread({}, entry);\n        this.setState({\n          entrySelectedCounter: this.state.entrySelectedCounter + 1,\n          selectedEntries: newSelectedEntries\n        });\n      } else {\n        delete newSelectedEntries[entry.id];\n        this.setState({\n          entrySelectedCounter: this.state.entrySelectedCounter - 1,\n          selectedEntries: newSelectedEntries\n        });\n      }\n    }\n  }, {\n    key: \"cancelSelection\",\n    value: function cancelSelection() {\n      this.setState({\n        entrySelectedCounter: 0,\n        selectedEntries: {}\n      });\n    }\n  }, {\n    key: \"assignTasks\",\n    value: function assignTasks() {\n      var taskIDs = [];\n\n      for (var taskID in this.state.selectedEntries) {\n        taskIDs.push(taskID);\n      }\n\n      setAssignedTasks(this.props, taskIDs, this.state.entrySelectedCounter, this.state.selectedEntries);\n    }\n  }, {\n    key: \"handleChangeForm\",\n    value: function handleChangeForm(event) {\n      var fleldVal = event.target.value;\n      this.setState({\n        searchValue: fleldVal\n      });\n    }\n  }, {\n    key: \"handleChangeDropDown\",\n    value: function handleChangeDropDown(event) {\n      var fleldVal = event.target.value;\n\n      switch (fleldVal) {\n        case 'שם פרטי':\n          this.setState({\n            searchField: 'firstName'\n          });\n          break;\n\n        case 'שם משפחה':\n          this.setState({\n            searchField: 'lastName'\n          });\n          break;\n\n        case 'תעודת זהות':\n          this.setState({\n            searchField: 'tz'\n          });\n          break;\n\n        case 'רחוב ומספר':\n          this.setState({\n            searchField: 'address'\n          });\n          break;\n\n        case 'עיר מגורים':\n          this.setState({\n            searchField: 'city'\n          });\n          break;\n\n        case 'מספר טלפון':\n          this.setState({\n            searchField: 'phone'\n          });\n          break;\n\n        case 'דואר אלקטרוני':\n          this.setState({\n            searchField: 'email'\n          });\n          break;\n\n        case 'ספק':\n          this.setState({\n            searchField: 'name'\n          });\n          break;\n\n        case 'עיר':\n          this.setState({\n            searchField: 'city'\n          });\n          break;\n\n        case 'רחוב ומספר':\n          this.setState({\n            searchField: 'address'\n          });\n          break;\n\n        case 'איש קשר':\n          this.setState({\n            searchField: 'contact name'\n          });\n          break;\n\n        case 'טלפון':\n          this.setState({\n            searchField: 'contact number'\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.data.length == 0) {\n        return React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            width: '100%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }\n        }, React.createElement(\"div\", {\n          className: \"nothing\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }\n        }, React.createElement(\"img\", {\n          src: \"/static/nothing.png\",\n          width: \"100\"\n        }), React.createElement(\"div\", {\n          style: {\n            fontSize: '20px',\n            marginTop: '10px'\n          }\n        }, \"\\u05D4\\u05DE\\u05DE\\u05DE... \\u05D0\\u05D9\\u05DF \\u05DB\\u05D0\\u05DF \\u05DB\\u05DC\\u05D5\\u05DD\")));\n      } else {\n        var actionsBar = '';\n\n        if (this.props.isSelectable && this.state.entrySelectedCounter > 0) {\n          actionsBar = React.createElement(Navbar, {\n            bg: \"light\",\n            fixed: \"bottom\"\n          }, React.createElement(ButtonGroup, null, React.createElement(Button, {\n            onClick: this.assignTasks,\n            variant: \"primary\"\n          }, \"\\u05E9\\u05D9\\u05D1\\u05D5\\u05E5 \", this.state.entrySelectedCounter, \" \\u05D0\\u05D9\\u05E1\\u05D5\\u05E4\\u05D9\\u05DD\"), React.createElement(Button, {\n            onClick: this.cancelSelection,\n            variant: \"secondary\"\n          }, \"\\u05D1\\u05D9\\u05D8\\u05D5\\u05DC\")));\n        }\n\n        if (this.props.isSearchable && this.props.page == 'adminUsers') {\n          actionsBar = React.createElement(Navbar, {\n            bg: \"light\",\n            fixed: \"bottom\"\n          }, React.createElement(Form, null, React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"div\", {\n            className: \"btn-group\",\n            role: \"group\",\n            \"aria-label\": \"Basic example\"\n          }, React.createElement(\"button\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'ADD_USER',\n                entries: _this2.props.entry\n              });\n            }\n          }, \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05EA \\u05DE\\u05EA\\u05E0\\u05D3\\u05D1\"), React.createElement(\"button\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'ADD_USER_CSV',\n                entries: _this2.props.entry\n              });\n            }\n          }, \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05D4 \\u05DE\\u05E7\\u05D5\\u05D1\\u05E5\"))), React.createElement(Col, null, React.createElement(InputGroup, {\n            className: \"mb-3\"\n          }, React.createElement(Form.Control, {\n            as: \"select\",\n            variant: \"outline-secondary\",\n            title: \"Dropdown\",\n            drop: \"up\",\n            onChange: this.handleChangeDropDown.bind(this)\n          }, React.createElement(\"option\", null, \"\\u05E9\\u05DD \\u05E4\\u05E8\\u05D8\\u05D9\"), React.createElement(\"option\", null, \"\\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05D4\"), React.createElement(\"option\", null, \"\\u05EA\\u05E2\\u05D5\\u05D3\\u05EA \\u05D6\\u05D4\\u05D5\\u05EA\"), React.createElement(\"option\", null, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D5\\u05DE\\u05E1\\u05E4\\u05E8\"), React.createElement(\"option\", null, \"\\u05E2\\u05D9\\u05E8 \\u05DE\\u05D2\\u05D5\\u05E8\\u05D9\\u05DD\"), React.createElement(\"option\", null, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), React.createElement(\"option\", null, \"\\u05D3\\u05D5\\u05D0\\u05E8 \\u05D0\\u05DC\\u05E7\\u05D8\\u05E8\\u05D5\\u05E0\\u05D9\")), React.createElement(FormControl, {\n            onChange: this.handleChangeForm.bind(this),\n            \"aria-describedby\": \"basic-addon1\"\n          }))))));\n        }\n\n        if (this.props.isSearchable && this.props.page == 'adminTasks') {\n          actionsBar = React.createElement(Navbar, {\n            bg: \"light\",\n            fixed: \"bottom\"\n          }, React.createElement(Form, null, React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"div\", {\n            className: \"btn-group\",\n            role: \"group\",\n            \"aria-label\": \"Basic example\"\n          }, React.createElement(\"input\", {\n            type: \"file\",\n            id: \"fileUploader\",\n            accept: \"xlsx\",\n            style: {\n              display: \"none\"\n            },\n            onChange: function onChange(e) {\n              return handleFileUpload(e.target.files[0]);\n            }\n          }), React.createElement(\"button\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'ADD_TASK',\n                entries: _this2.props.entry\n              });\n            }\n          }, \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05EA \\u05D0\\u05D9\\u05E1\\u05D5\\u05E3\"), React.createElement(\"button\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: function onClick() {\n              return document.getElementById('fileUploader').click();\n            } //this.props.dispatch({ type: 'OPEN_MODAL', msg: 'ADD_TASK_CSV', entries: this.props.entry})\n\n          }, \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05D4 \\u05DE\\u05E7\\u05D5\\u05D1\\u05E5\"), React.createElement(\"button\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'EXPORT_TASK_CSV',\n                entries: _this2.props.entry\n              });\n            }\n          }, \"\\u05D9\\u05D9\\u05E6\\u05D5\\u05D0 \\u05D3\\u05D5\\u05D7\"))), React.createElement(Col, null, React.createElement(InputGroup, {\n            className: \"mb-3\"\n          }, React.createElement(Form.Control, {\n            as: \"select\",\n            variant: \"outline-secondary\",\n            title: \"Dropdown\",\n            drop: \"up\",\n            onChange: this.handleChangeDropDown.bind(this)\n          }, React.createElement(\"option\", null, \"\\u05E1\\u05E4\\u05E7\"), React.createElement(\"option\", null, \"\\u05E2\\u05D9\\u05E8\"), React.createElement(\"option\", null, \"\\u05E8\\u05D7\\u05D5\\u05D1 \\u05D5\\u05DE\\u05E1\\u05E4\\u05E8\"), React.createElement(\"option\", null, \"\\u05D0\\u05D9\\u05E9 \\u05E7\\u05E9\\u05E8\"), React.createElement(\"option\", null, \"\\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\")), React.createElement(FormControl, {\n            onChange: this.handleChangeForm.bind(this),\n            \"aria-describedby\": \"basic-addon1\"\n          }))))));\n        }\n\n        if (this.props.tableTasksCardView) {\n          return React.createElement(CardColumns, null, this.props.data.map(function (entry) {\n            var options = {\n              weekday: 'short',\n              year: 'numeric',\n              month: 'numeric',\n              day: 'numeric'\n            };\n            var date = entry.timestamp.toDate();\n            return React.createElement(Entry, {\n              tableTasksCardView: _this2.props.tableTasksCardView,\n              page: _this2.props.page,\n              type: _this2.props.type,\n              key: entry.id,\n              selectCallback: _this2.selectCallback,\n              entry: entry,\n              tableColumns: _this2.state.tableColumns\n            });\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"table-responsive\"\n          }, React.createElement(Table, {\n            hover: true,\n            responsive: true\n          }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, this.state.tableColumns.map(function (column) {\n            switch (column) {\n              default:\n                return React.createElement(\"th\", {\n                  scope: \"col\",\n                  key: column\n                }, _this2.state.columnNames[column]);\n            }\n          }))), React.createElement(\"tbody\", null, this.props.data.map(function (entry) {\n            var isSelected = false;\n\n            if (_this2.state.selectedEntries[entry.id]) {\n              isSelected = true;\n            }\n\n            var ret = React.createElement(Entry, {\n              page: _this2.props.page,\n              isSelected: isSelected,\n              isSelectable: _this2.props.isSelectable,\n              type: _this2.props.type,\n              key: entry.id,\n              selectCallback: _this2.selectCallback,\n              entry: entry,\n              tableColumns: _this2.state.tableColumns\n            });\n\n            if (_this2.props.isSearchable) {\n              for (var key in entry) {\n                if (key == _this2.state.searchField) if (entry[key].includes(_this2.state.searchValue)) return ret;\n              }\n            } else {\n              return ret;\n            }\n          }))), actionsBar);\n        }\n      }\n    }\n  }]);\n\n  return TableBlock;\n}(React.Component);\n\nexport default connect(function (state) {\n  return state;\n})(TableBlock);","map":null,"metadata":{},"sourceType":"module"}