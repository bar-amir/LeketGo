{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport fire from '../config/firebaseConfig';\nimport refresh4User from './refresh4User';\n\nfunction sendCompletionMsg(props, numOfFailures, numOfSuccesses, entrySelectedCounter, selectedEntries) {\n  console.log(\"test2\", numOfSuccesses, numOfFailures, entrySelectedCounter);\n\n  if (numOfFailures == 0 && numOfSuccesses == entrySelectedCounter) {\n    props.dispatch({\n      type: 'OPEN_MODAL',\n      msg: 'ASSIGN_TASKS_SUCCESS',\n      entries: selectedEntries\n    });\n  }\n\n  if (numOfSuccesses == 0 && numOfFailures == entrySelectedCounter) {\n    props.dispatch({\n      type: 'OPEN_MODAL',\n      msg: 'ASSIGN_TASKS_FAILED',\n      entries: selectedEntries\n    });\n  }\n\n  if (numOfFailures > 0 && numOfSuccesses > 0) {\n    props.dispatch({\n      type: 'OPEN_MODAL',\n      msg: 'ASSIGN_TASKS_MIX',\n      entries: selectedEntries\n    });\n  }\n\n  refresh4User(props.dispatch, props.userData.region, props.userData.uid);\n}\n\nfunction runTrans(props, taskIDs, entrySelectedCounter, selectedEntries, index, numOfSuccesses, numOfFailures, db) {\n  db.runTransaction(function (transaction) {\n    var taskID = taskIDs[index];\n    var task = db.collection(\"tasks\").doc(taskID);\n    return transaction.get(task).then(function (taskSnapshot) {\n      if (!taskSnapshot.exists) {\n        throw \"Could not find task with given ID: \" + taskID;\n      }\n\n      var taskIsAvialable = taskSnapshot.data().volunteerUid == null ? true : false;\n\n      if (taskIsAvialable) {\n        transaction.update(task, {\n          volunteerUid: props.userData.uid\n        });\n        return \"Task was assigned to user successfully!\";\n      } else {\n        return _Promise.reject(\"Sorry! task was taken earlier.\");\n      }\n    });\n  }).then(function (msg) {\n    index++;\n    console.log(msg);\n    numOfSuccesses++;\n    console.log(\"test\", numOfSuccesses, numOfFailures, entrySelectedCounter);\n\n    if (index < entrySelectedCounter) {\n      runTrans(props, taskIDs, entrySelectedCounter, selectedEntries, index, numOfSuccesses, numOfFailures, db);\n    }\n\n    if (numOfFailures + numOfSuccesses == entrySelectedCounter) {\n      sendCompletionMsg(props, numOfFailures, numOfSuccesses, entrySelectedCounter, selectedEntries);\n    }\n  }).catch(function (msg) {\n    index++;\n    console.log(msg);\n    numOfFailures++;\n    console.log(\"test\", numOfSuccesses, numOfFailures, entrySelectedCounter);\n\n    if (index < entrySelectedCounter) {\n      runTrans(props, taskIDs, entrySelectedCounter, selectedEntries, index, numOfSuccesses, numOfFailures, db);\n    }\n\n    if (numOfFailures + numOfSuccesses == entrySelectedCounter) {\n      sendCompletionMsg(props, numOfFailures, numOfSuccesses, entrySelectedCounter, selectedEntries);\n    }\n  });\n}\n\nexport default function setAssignedTasks(props, taskIDs, entrySelectedCounter, selectedEntries) {\n  var db = fire.firestore();\n  var numOfSuccesses = 0;\n  var numOfFailures = 0;\n  var index = 0;\n  runTrans(props, taskIDs, entrySelectedCounter, selectedEntries, index, numOfSuccesses, numOfFailures, db);\n}","map":null,"metadata":{},"sourceType":"module"}