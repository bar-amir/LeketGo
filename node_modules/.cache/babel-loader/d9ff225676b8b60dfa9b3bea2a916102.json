{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Roey\\\\Programming\\\\google\\\\ver_6.8\\\\LeketGo\\\\components\\\\Entry.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Card, Button, ButtonToolbar, Tooltip, OverlayTrigger, Dropdown, Form, ButtonGroup } from 'react-bootstrap';\nimport fire from '../config/firebaseConfig';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Link from 'next/link';\n\nvar Entry =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Entry, _React$Component);\n\n  function Entry(props) {\n    var _this;\n\n    _classCallCheck(this, Entry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Entry).call(this, props));\n    _this.state = {\n      isEditable: false\n    };\n    _this.toggleSelection = _this.toggleSelection.bind(_assertThisInitialized(_this));\n    _this.toggleEditable = _this.toggleEditable.bind(_assertThisInitialized(_this));\n    _this.copyToClipboard = _this.copyToClipboard.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Entry, [{\n    key: \"copyToClipboard\",\n    value: function copyToClipboard(values) {\n      var fullAddress = values.street + ', ' + values.city;\n      document.execCommand(\"copy\");\n    }\n  }, {\n    key: \"getDataValues\",\n    value: function getDataValues(entry) {\n      switch (this.props.type) {\n        case 'tasks':\n          var options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n          };\n          var date = entry.timestamp.toDate();\n          var statusIcon;\n          var statusMessage;\n          var fullAddressWithButtons = React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, entry.address + ', ' + entry.city, React.createElement(OverlayTrigger, {\n            placement: \"top\",\n            overlay: React.createElement(Tooltip, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \"\\u05D4\\u05E2\\u05EA\\u05E7\\u05EA \\u05DB\\u05EA\\u05D5\\u05D1\\u05EA\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(CopyToClipboard, {\n            text: entry.address + ', ' + entry.city,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: '#' + entry.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            style: {\n              cursor: 'pointer'\n            },\n            className: \"ml-2 far fa-clipboard nm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          })))), React.createElement(OverlayTrigger, {\n            placement: \"top\",\n            overlay: React.createElement(Tooltip, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9 \\u05D1\\u05BEWaze\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            target: \"_blank\",\n            href: \"https://waze.com/ul?q=\" + entry.address + ', ' + entry.city,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            style: {\n              cursor: 'pointer'\n            },\n            className: \"ml-2 fab fa-waze nm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }))));\n\n          if (entry.collected) {\n            if (entry.reportFilled) {\n              statusIcon = 'fas fa-calendar-check';\n              statusMessage = 'בוצע ומושב';\n            } else {\n              statusIcon = 'far fa-calendar-check';\n              statusMessage = 'בוצע ולא מושב';\n            }\n          } else {\n            if (entry.reportFilled) {\n              statusIcon = 'fas fa-calendar-times';\n              statusMessage = 'לא בוצע ומושב';\n            } else {\n              statusIcon = 'far fa-calendar-times';\n              statusMessage = 'לא בוצע ולא מושב';\n            }\n          }\n\n          return {\n            tid: entry.id,\n            date: date.toLocaleDateString('he-IL', options),\n            time: date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2),\n            city: entry.city,\n            name: entry.name,\n            street: entry.address,\n            fullAddress: entry.address + ', ' + entry.city,\n            fullAddressWithButtons: fullAddressWithButtons,\n            actions: 'ACTIONS',\n            contactName: entry['contact name'],\n            contactNumber: React.createElement(\"a\", {\n              style: {\n                whiteSpace: 'nowrap'\n              },\n              href: 'tel: ' + entry['contact number'],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, entry['contact number']),\n            checkBox: this.props.isSelected ? React.createElement(Form.Check, {\n              custom: true,\n              checked: true,\n              label: \"\",\n              type: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }) : React.createElement(Form.Check, {\n              custom: true,\n              label: \"\",\n              type: \"checkbox\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }),\n            statusIcon: statusIcon,\n            statusMessage: statusMessage\n          };\n\n        case 'users':\n          return {\n            uid: entry.id,\n            firstName: entry.firstName,\n            lastName: entry.lastName,\n            fullName: entry.firstName + '' + entry.lastName,\n            region: entry.region,\n            email: entry.email,\n            phone: entry.phone,\n            tz: entry.tz\n          };\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"toggleSelection\",\n    value: function toggleSelection() {\n      if (this.props.isSelectable) {\n        this.props.selectCallback(this.props.entry, !this.props.isSelected);\n      }\n    }\n  }, {\n    key: \"toggleEditable\",\n    value: function toggleEditable() {\n      this.setState({\n        isEditable: !this.state.isEditable\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var buttons = [];\n      var nm = this.props.tableTasksCardView ? 'nm' : '';\n\n      switch (this.props.page) {\n        case 'assignedTasks':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_NOTES',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-sticky-note fa-fw \" + nm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }), this.props.tableTasksCardView ? React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }) : '', \"\\u05D4\\u05E2\\u05E8\\u05D5\\u05EA\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_DONE',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-check fa-fw \" + nm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }), this.props.tableTasksCardView ? React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }) : '', \"\\u05D1\\u05D5\\u05E6\\u05E2\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_CANCEL',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-times fa-fw \" + nm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }), this.props.tableTasksCardView ? React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }) : '', \"\\u05D4\\u05E1\\u05E8\\u05D4\")\n          }];\n          break;\n\n        case 'taskReports':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REPORT_FILL',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-check fa-fw \" + nm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }), this.props.tableTasksCardView ? React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }) : '', \"\\u05D3\\u05D9\\u05D5\\u05D5\\u05D7\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REPORT_UNDONE'\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-calendar-times fa-fw \" + nm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }), this.props.tableTasksCardView ? React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }) : '', \"\\u05DC\\u05D0 \\u05D1\\u05D5\\u05E6\\u05E2\")\n          }];\n          break;\n\n        case 'adminUsers':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'EDIT_USER',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-edit fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }), \"\\u05E2\\u05E8\\u05D9\\u05DB\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'RESET_PASSWORD',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-unlock-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }), \"\\u05D0\\u05D9\\u05E4\\u05D5\\u05E1 \\u05E1\\u05D9\\u05E1\\u05DE\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REMOVE_USER',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-trash-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }), \"\\u05E1\\u05D2\\u05D9\\u05E8\\u05EA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF\")\n          }];\n          break;\n\n        case 'adminTasks':\n          buttons = [{\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'EDIT_TASK',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-primary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-edit fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175\n              },\n              __self: this\n            }), \"\\u05E2\\u05E8\\u05D9\\u05DB\\u05D4\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'TASK_STATUS',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-question fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            }), \"\\u05E1\\u05D8\\u05D8\\u05D5\\u05E1\")\n          }, {\n            onClick: function onClick() {\n              return _this2.props.dispatch({\n                type: 'OPEN_MODAL',\n                msg: 'REMOVE_TASK',\n                entries: _this2.props.entry\n              });\n            },\n            variant: 'outline-secondary',\n            text: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"far fa-trash-alt fa-fw\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            }), \"\\u05DE\\u05D7\\u05D9\\u05E7\\u05D4\")\n          }];\n          break;\n      }\n\n      if (this.props.tableTasksCardView) {\n        var values = this.getDataValues(this.props.entry);\n        var numButtons = 100 / buttons.length;\n        var viewButtons = React.createElement(ButtonGroup, {\n          className: \"w-100 mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, buttons.map(function (button) {\n          return React.createElement(Button, {\n            className: \"w-\" + numButtons,\n            key: button.text,\n            onClick: button.onClick,\n            variant: \"outline-secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, button.text);\n        }));\n        return React.createElement(Card, {\n          id: values.tid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, values.date, \", \", values.time), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, values.name), React.createElement(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, values.fullAddressWithButtons), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, values.contactName), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, values.contactNumber), viewButtons)));\n      } else {\n        return React.createElement(\"tr\", {\n          className: (this.props.isSelected ? 'table-primary' : '') + (this.props.isSelectable ? ' entry-selectable' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, this.props.tableColumns.map(function (column) {\n          switch (column) {\n            case 'actions':\n              {\n                switch (_this2.props.page) {\n                  case 'assignedTasks':\n                    return React.createElement(\"td\", {\n                      className: \"align-middle\",\n                      key: column,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 232\n                      },\n                      __self: this\n                    }, React.createElement(\"span\", {\n                      style: {\n                        whiteSpace: 'nowrap'\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 233\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown, {\n                      width: \"200\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 233\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown.Toggle, {\n                      variant: \"secondary\",\n                      id: \"dropdown-basic\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 234\n                      },\n                      __self: this\n                    }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 237\n                      },\n                      __self: this\n                    }, buttons.map(function (button) {\n                      return React.createElement(Dropdown.Item, {\n                        key: button.text,\n                        onClick: button.onClick,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 240\n                        },\n                        __self: this\n                      }, button.text);\n                    })))));\n\n                  case 'adminUsers':\n                    return React.createElement(\"td\", {\n                      className: \"align-middle\",\n                      key: column,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 252\n                      },\n                      __self: this\n                    }, React.createElement(\"span\", {\n                      style: {\n                        whiteSpace: 'nowrap'\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 253\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown, {\n                      width: \"200\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 254\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown.Toggle, {\n                      variant: \"secondary\",\n                      id: \"dropdown-basic\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 255\n                      },\n                      __self: this\n                    }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 258\n                      },\n                      __self: this\n                    }, buttons.map(function (button) {\n                      return React.createElement(Dropdown.Item, {\n                        key: button.text,\n                        onClick: button.onClick,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 261\n                        },\n                        __self: this\n                      }, button.text);\n                    })))));\n\n                  case 'adminTasks':\n                    return React.createElement(\"td\", {\n                      className: \"align-middle\",\n                      key: column,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 272\n                      },\n                      __self: this\n                    }, React.createElement(\"span\", {\n                      style: {\n                        whiteSpace: 'nowrap'\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 273\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown, {\n                      width: \"200\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 274\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown.Toggle, {\n                      variant: \"secondary\",\n                      id: \"dropdown-basic\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 275\n                      },\n                      __self: this\n                    }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 278\n                      },\n                      __self: this\n                    }, buttons.map(function (button) {\n                      return React.createElement(Dropdown.Item, {\n                        key: button.text,\n                        onClick: button.onClick,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 281\n                        },\n                        __self: this\n                      }, button.text);\n                    })))));\n\n                  case 'taskReports':\n                    return React.createElement(\"td\", {\n                      className: \"align-middle\",\n                      key: column,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 292\n                      },\n                      __self: this\n                    }, React.createElement(\"span\", {\n                      style: {\n                        whiteSpace: 'nowrap'\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 293\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown, {\n                      width: \"200\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 294\n                      },\n                      __self: this\n                    }, React.createElement(Dropdown.Toggle, {\n                      variant: \"secondary\",\n                      id: \"dropdown-basic\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 295\n                      },\n                      __self: this\n                    }, \"\\u05E4\\u05E2\\u05D5\\u05DC\\u05D5\\u05EA\"), React.createElement(Dropdown.Menu, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 298\n                      },\n                      __self: this\n                    }, buttons.map(function (button) {\n                      return React.createElement(Dropdown.Item, {\n                        key: button.text,\n                        onClick: button.onClick,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 301\n                        },\n                        __self: this\n                      }, button.text);\n                    })))));\n\n                  default:\n                    return React.createElement(\"td\", {\n                      className: \"align-middle\",\n                      key: column,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 313\n                      },\n                      __self: this\n                    }, React.createElement(ButtonGroup, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 314\n                      },\n                      __self: this\n                    }, buttons.map(function (button) {\n                      return React.createElement(Button, {\n                        key: button.text,\n                        onClick: button.onClick,\n                        variant: button.variant,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 317\n                        },\n                        __self: this\n                      }, button.text);\n                    })));\n                }\n              }\n\n            case 'status':\n              {\n                var _values = _this2.getDataValues(_this2.props.entry);\n\n                var message = _values.statusMessage;\n                var icon = _values.statusIcon;\n                return React.createElement(\"td\", {\n                  className: \"align-middle\",\n                  key: column,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 331\n                  },\n                  __self: this\n                }, React.createElement(ButtonToolbar, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 332\n                  },\n                  __self: this\n                }, React.createElement(OverlayTrigger, {\n                  placement: \"left\",\n                  overlay: React.createElement(Tooltip, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 336\n                    },\n                    __self: this\n                  }, message),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 333\n                  },\n                  __self: this\n                }, React.createElement(\"i\", {\n                  className: icon,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 340\n                  },\n                  __self: this\n                }))));\n              }\n\n            default:\n              {\n                return React.createElement(\"td\", {\n                  className: \"align-middle\",\n                  onClick: _this2.toggleSelection,\n                  key: column,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 349\n                  },\n                  __self: this\n                }, _this2.getDataValues(_this2.props.entry)[column]);\n              }\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Entry;\n}(React.Component);\n\nexport default connect(function (state) {\n  return state;\n})(Entry);","map":{"version":3,"sources":["D:\\Roey\\Programming\\google\\ver_6.8\\LeketGo\\components\\Entry.js"],"names":["React","connect","Card","Button","ButtonToolbar","Tooltip","OverlayTrigger","Dropdown","Form","ButtonGroup","fire","CopyToClipboard","Link","Entry","props","state","isEditable","toggleSelection","bind","toggleEditable","copyToClipboard","values","fullAddress","street","city","document","execCommand","entry","type","options","weekday","year","month","day","date","timestamp","toDate","statusIcon","statusMessage","fullAddressWithButtons","address","id","cursor","collected","reportFilled","tid","toLocaleDateString","time","getHours","getMinutes","slice","name","actions","contactName","contactNumber","whiteSpace","checkBox","isSelected","uid","firstName","lastName","fullName","region","email","phone","tz","isSelectable","selectCallback","setState","buttons","nm","tableTasksCardView","page","onClick","dispatch","msg","entries","variant","text","getDataValues","numButtons","length","viewButtons","map","button","tableColumns","column","message","icon","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,aAAtB,EAAqCC,OAArC,EAA8CC,cAA9C,EAA8DC,QAA9D,EAAwEC,IAAxE,EAA8EC,WAA9E,QAAgG,iBAAhG;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AACA,UAAKE,eAAL,GAAuB,MAAKA,eAAL,CAAqBF,IAArB,+BAAvB;AAPe;AAQlB;;;;oCAEeG,M,EAAQ;AACpB,UAAIC,WAAW,GAAGD,MAAM,CAACE,MAAP,GAAgB,IAAhB,GAAuBF,MAAM,CAACG,IAAhD;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACH;;;kCAEaC,K,EAAO;AACjB,cAAQ,KAAKb,KAAL,CAAWc,IAAnB;AACI,aAAK,OAAL;AACI,cAAIC,OAAO,GAAG;AAAEC,YAAAA,OAAO,EAAE,OAAX;AAAoBC,YAAAA,IAAI,EAAE,SAA1B;AAAqCC,YAAAA,KAAK,EAAE,SAA5C;AAAuDC,YAAAA,GAAG,EAAE;AAA5D,WAAd;AACA,cAAIC,IAAI,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,EAAX;AACA,cAAIC,UAAJ;AACA,cAAIC,aAAJ;AACA,cAAIC,sBAAsB,GACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOZ,KAAK,CAACa,OAAN,GAAe,IAAf,GAAqBb,KAAK,CAACH,IAAlC,EAAuC,oBAAC,cAAD;AACnC,YAAA,SAAS,EAAC,KADyB;AAEnC,YAAA,OAAO,EACH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAO/B,oBAAC,eAAD;AAAiB,YAAA,IAAI,EAAEG,KAAK,CAACa,OAAN,GAAe,IAAf,GAAqBb,KAAK,CAACH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAG,YAAA,IAAI,EAAE,MAAIG,KAAK,CAACc,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE;AAAT,aAAV;AAA+B,YAAA,SAAS,EAAC,0BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,CAAxD,CAP+B,CAAvC,EAWI,oBAAC,cAAD;AACA,YAAA,SAAS,EAAC,KADV;AAEA,YAAA,OAAO,EACH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOI;AAAG,YAAA,MAAM,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAE,2BAA2Bf,KAAK,CAACa,OAAjC,GAA0C,IAA1C,GAAgDb,KAAK,CAACH,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqF;AAAG,YAAA,KAAK,EAAE;AAACkB,cAAAA,MAAM,EAAE;AAAT,aAAV;AAA+B,YAAA,SAAS,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArF,CAPJ,CAXJ,CADJ;;AAuBA,cAAIf,KAAK,CAACgB,SAAV,EAAqB;AACjB,gBAAIhB,KAAK,CAACiB,YAAV,EAAwB;AACpBP,cAAAA,UAAU,GAAG,uBAAb;AACAC,cAAAA,aAAa,GAAG,YAAhB;AACH,aAHD,MAIK;AACDD,cAAAA,UAAU,GAAG,uBAAb;AACAC,cAAAA,aAAa,GAAG,eAAhB;AACH;AACJ,WATD,MASO;AACH,gBAAIX,KAAK,CAACiB,YAAV,EAAwB;AACpBP,cAAAA,UAAU,GAAG,uBAAb;AACAC,cAAAA,aAAa,GAAG,eAAhB;AACH,aAHD,MAGO;AACHD,cAAAA,UAAU,GAAG,uBAAb;AACAC,cAAAA,aAAa,GAAG,kBAAhB;AACH;AACJ;;AACD,iBAAO;AACHO,YAAAA,GAAG,EAAElB,KAAK,CAACc,EADR;AAEHP,YAAAA,IAAI,EAAEA,IAAI,CAACY,kBAAL,CAAwB,OAAxB,EAAiCjB,OAAjC,CAFH;AAGHkB,YAAAA,IAAI,EAAEb,IAAI,CAACc,QAAL,KAAkB,GAAlB,GAAwB,CAAC,MAAId,IAAI,CAACe,UAAL,EAAL,EAAwBC,KAAxB,CAA8B,CAAC,CAA/B,CAH3B;AAIH1B,YAAAA,IAAI,EAAEG,KAAK,CAACH,IAJT;AAKH2B,YAAAA,IAAI,EAAExB,KAAK,CAACwB,IALT;AAMH5B,YAAAA,MAAM,EAAEI,KAAK,CAACa,OANX;AAOHlB,YAAAA,WAAW,EAAEK,KAAK,CAACa,OAAN,GAAgB,IAAhB,GAAuBb,KAAK,CAACH,IAPvC;AAQHe,YAAAA,sBAAsB,EAAEA,sBARrB;AASHa,YAAAA,OAAO,EAAE,SATN;AAUHC,YAAAA,WAAW,EAAE1B,KAAK,CAAC,cAAD,CAVf;AAWH2B,YAAAA,aAAa,EAAE;AAAG,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAAV;AAAkC,cAAA,IAAI,EAAE,UAAS5B,KAAK,CAAC,gBAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA2EA,KAAK,CAAC,gBAAD,CAAhF,CAXZ;AAYH6B,YAAAA,QAAQ,EAAE,KAAK1C,KAAL,CAAW2C,UAAX,GAAwB,oBAAC,IAAD,CAAM,KAAN;AAAY,cAAA,MAAM,MAAlB;AAAmB,cAAA,OAAO,MAA1B;AAA2B,cAAA,KAAK,EAAC,EAAjC;AAAoC,cAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAiF,oBAAC,IAAD,CAAM,KAAN;AAAY,cAAA,MAAM,MAAlB;AAAmB,cAAA,KAAK,EAAC,EAAzB;AAA4B,cAAA,IAAI,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZxF;AAaHpB,YAAAA,UAAU,EAAEA,UAbT;AAcHC,YAAAA,aAAa,EAAEA;AAdZ,WAAP;;AAgBJ,aAAK,OAAL;AACI,iBAAO;AACHoB,YAAAA,GAAG,EAAE/B,KAAK,CAACc,EADR;AAEHkB,YAAAA,SAAS,EAAEhC,KAAK,CAACgC,SAFd;AAGHC,YAAAA,QAAQ,EAAEjC,KAAK,CAACiC,QAHb;AAIHC,YAAAA,QAAQ,EAAElC,KAAK,CAACgC,SAAN,GAAkB,EAAlB,GAAuBhC,KAAK,CAACiC,QAJpC;AAKHE,YAAAA,MAAM,EAAEnC,KAAK,CAACmC,MALX;AAMHC,YAAAA,KAAK,EAAEpC,KAAK,CAACoC,KANV;AAOHC,YAAAA,KAAK,EAAErC,KAAK,CAACqC,KAPV;AAQHC,YAAAA,EAAE,EAAEtC,KAAK,CAACsC;AARP,WAAP;;AAUJ;AACI;AA3ER;AA6EH;;;sCAEiB;AACd,UAAI,KAAKnD,KAAL,CAAWoD,YAAf,EAA6B;AACzB,aAAKpD,KAAL,CAAWqD,cAAX,CAA0B,KAAKrD,KAAL,CAAWa,KAArC,EAA4C,CAAC,KAAKb,KAAL,CAAW2C,UAAxD;AACH;AACJ;;;qCAEgB;AACb,WAAKW,QAAL,CAAc;AAACpD,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,OAAd;AACH;;;6BAEQ;AAAA;;AACL,UAAIqD,OAAO,GAAG,EAAd;AACA,UAAIC,EAAE,GAAG,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC,IAAhC,GAAuC,EAAhD;;AACA,cAAQ,KAAKzD,KAAL,CAAW0D,IAAnB;AACI,aAAK,eAAL;AACIH,UAAAA,OAAO,GAAG,CACN;AACII,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,YAA3B;AAAyCC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA7D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,iBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAE,8BAA6BR,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,EAA0D,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAwC,EAAlG;AAHV,WADM,EAMN;AACIE,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,WAA3B;AAAwCC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA5D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,iBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAE,iCAAgCR,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,EAA6D,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAwC,EAArG;AAHV,WANM,EAWN;AACIE,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,aAA3B;AAA0CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA9D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAE,iCAAgCR,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,EAA6D,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAwC,EAArG;AAHV,WAXM,CAAV;AAiBA;;AACJ,aAAK,aAAL;AACIF,UAAAA,OAAO,GAAG,CACN;AACII,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,aAA3B;AAA0CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA9D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,iBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAE,iCAAgCR,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,EAA6D,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAwC,EAArG;AAHV,WADM,EAMN;AACIE,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE;AAA3B,eAApB,CAAN;AAAA,aADb;AAEIE,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAE,iCAAgCR,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,EAA6D,KAAKxD,KAAL,CAAWyD,kBAAX,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAwC,EAArG;AAHV,WANM,CAAV;AAYA;;AACJ,aAAK,YAAL;AACIF,UAAAA,OAAO,GAAG,CACN;AACII,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,WAA3B;AAAwCC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA5D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,iBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WADM,EAMN;AACIL,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,gBAA3B;AAA6CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAAjE,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WANM,EAWN;AACIL,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,aAA3B;AAA0CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA9D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WAXM,CAAV;AAiBA;;AACJ,aAAK,YAAL;AACIT,UAAAA,OAAO,GAAG,CACN;AACII,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,WAA3B;AAAwCC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA5D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,iBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WADM,EAMN;AACIL,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,aAA3B;AAA0CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA9D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WANM,EAWN;AACIL,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAC3D,KAAL,CAAW4D,QAAX,CAAoB;AAAE9C,gBAAAA,IAAI,EAAE,YAAR;AAAsB+C,gBAAAA,GAAG,EAAE,aAA3B;AAA0CC,gBAAAA,OAAO,EAAE,MAAI,CAAC9D,KAAL,CAAWa;AAA9D,eAApB,CAAN;AAAA,aADb;AAEIkD,YAAAA,OAAO,EAAE,mBAFb;AAGIC,YAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAM;AAAG,cAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAHV,WAXM,CAAV;AAiBA;AAvER;;AAyEA,UAAI,KAAKhE,KAAL,CAAWyD,kBAAf,EAAmC;AAC/B,YAAIlD,MAAM,GAAG,KAAK0D,aAAL,CAAmB,KAAKjE,KAAL,CAAWa,KAA9B,CAAb;AACA,YAAIqD,UAAU,GAAG,MAAIX,OAAO,CAACY,MAA7B;AACA,YAAIC,WAAW,GACX,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKb,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACzB,iBACI,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAE,OAAKJ,UAAxB;AAAoC,YAAA,GAAG,EAAEI,MAAM,CAACN,IAAhD;AAAsD,YAAA,OAAO,EAAEM,MAAM,CAACX,OAAtE;AAA+E,YAAA,OAAO,EAAC,mBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GW,MAAM,CAACN,IAAnH,CADJ;AAGC,SAJA,CADL,CADJ;AASA,eACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEzD,MAAM,CAACwB,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCxB,MAAM,CAACa,IADR,QACgBb,MAAM,CAAC0B,IADvB,CADJ,EAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa1B,MAAM,CAAC8B,IAApB,CADA,EAEA,oBAAC,IAAD,CAAM,QAAN;AAAe,UAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C9B,MAAM,CAACkB,sBAAnD,CAFA,EAMA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBlB,MAAM,CAACgC,WAA9B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMhC,MAAM,CAACiC,aAAb,CAFJ,EAGK4B,WAHL,CANA,CAJJ,CADJ;AAoBH,OAhCD,MAgCO;AACP,eACI;AAAI,UAAA,SAAS,EAAE,CAAC,KAAKpE,KAAL,CAAW2C,UAAX,GAAwB,eAAxB,GAA0C,EAA3C,KAAkD,KAAK3C,KAAL,CAAWoD,YAAX,GAA0B,mBAA1B,GAAgD,EAAlG,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKpD,KAAL,CAAWuE,YAAX,CAAwBF,GAAxB,CAA4B,UAACG,MAAD,EAAY;AACrC,kBAAQA,MAAR;AACI,iBAAK,SAAL;AACA;AACI,wBAAQ,MAAI,CAACxE,KAAL,CAAW0D,IAAnB;AACI,uBAAK,eAAL;AACQ,2BACI;AAAI,sBAAA,SAAS,EAAC,cAAd;AAA6B,sBAAA,GAAG,EAAEc,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA;AAAM,sBAAA,KAAK,EAAE;AAAC/B,wBAAAA,UAAU,EAAE;AAAb,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqC,oBAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACjC,oBAAC,QAAD,CAAU,MAAV;AAAiB,sBAAA,OAAO,EAAC,WAAzB;AAAqC,sBAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADiC,EAIjC,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCc,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACjB,6BACI,oBAAC,QAAD,CAAU,IAAV;AAAe,wBAAA,GAAG,EAAEA,MAAM,CAACN,IAA3B;AAAiC,wBAAA,OAAO,EAAEM,MAAM,CAACX,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCW,MAAM,CAACN,IADR,CADJ;AAKC,qBANR,CADD,CAJiC,CAArC,CADA,CADJ;;AAmBR,uBAAK,YAAL;AACI,2BACA;AAAI,sBAAA,SAAS,EAAC,cAAd;AAA6B,sBAAA,GAAG,EAAEQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA;AAAM,sBAAA,KAAK,EAAE;AAAC/B,wBAAAA,UAAU,EAAE;AAAb,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,sBAAA,OAAO,EAAC,WAAzB;AAAqC,sBAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,EAII,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCc,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACzB,6BACI,oBAAC,QAAD,CAAU,IAAV;AAAe,wBAAA,GAAG,EAAEA,MAAM,CAACN,IAA3B;AAAiC,wBAAA,OAAO,EAAEM,MAAM,CAACX,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCW,MAAM,CAACN,IADR,CADJ;AAKC,qBANA,CADD,CAJJ,CADJ,CADA,CADA;;AAoBJ,uBAAK,YAAL;AACQ,2BAAO;AAAI,sBAAA,SAAS,EAAC,cAAd;AAA6B,sBAAA,GAAG,EAAEQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACP;AAAM,sBAAA,KAAK,EAAE;AAAC/B,wBAAAA,UAAU,EAAE;AAAb,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,sBAAA,OAAO,EAAC,WAAzB;AAAqC,sBAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,EAII,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCc,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACzB,6BACI,oBAAC,QAAD,CAAU,IAAV;AAAe,wBAAA,GAAG,EAAEA,MAAM,CAACN,IAA3B;AAAiC,wBAAA,OAAO,EAAEM,MAAM,CAACX,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCW,MAAM,CAACN,IADR,CADJ;AAKC,qBANA,CADD,CAJJ,CADJ,CADO,CAAP;;AAkBR,uBAAK,aAAL;AACI,2BACA;AAAI,sBAAA,SAAS,EAAC,cAAd;AAA6B,sBAAA,GAAG,EAAEQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAM,sBAAA,KAAK,EAAE;AAAC/B,wBAAAA,UAAU,EAAE;AAAb,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,sBAAA,OAAO,EAAC,WAAzB;AAAqC,sBAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,EAII,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKc,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACzB,6BACI,oBAAC,QAAD,CAAU,IAAV;AAAe,wBAAA,GAAG,EAAEA,MAAM,CAACN,IAA3B;AAAiC,wBAAA,OAAO,EAAEM,MAAM,CAACX,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCW,MAAM,CAACN,IADR,CADJ;AAKC,qBANA,CADL,CAJJ,CADJ,CADJ,CADA;;AAoBJ;AACI,2BACI;AAAI,sBAAA,SAAS,EAAC,cAAd;AAA6B,sBAAA,GAAG,EAAEQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKjB,OAAO,CAACc,GAAR,CAAY,UAACC,MAAD,EAAY;AACzB,6BACI,oBAAC,MAAD;AAAQ,wBAAA,GAAG,EAAEA,MAAM,CAACN,IAApB;AAA0B,wBAAA,OAAO,EAAEM,MAAM,CAACX,OAA1C;AAAmD,wBAAA,OAAO,EAAEW,MAAM,CAACP,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6EO,MAAM,CAACN,IAApF,CADJ;AAGC,qBAJA,CADL,CADJ,CADJ;AAnFR;AA+FH;;AACD,iBAAK,QAAL;AACA;AACA,oBAAIzD,OAAM,GAAG,MAAI,CAAC0D,aAAL,CAAmB,MAAI,CAACjE,KAAL,CAAWa,KAA9B,CAAb;;AACA,oBAAI4D,OAAO,GAAGlE,OAAM,CAACiB,aAArB;AACA,oBAAIkD,IAAI,GAAGnE,OAAM,CAACgB,UAAlB;AACA,uBACI;AAAI,kBAAA,SAAS,EAAC,cAAd;AAA6B,kBAAA,GAAG,EAAEiD,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,cAAD;AACA,kBAAA,SAAS,EAAC,MADV;AAEA,kBAAA,OAAO,EACH,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCC,OADD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAG,kBAAA,SAAS,EAAEC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA,CADJ,CADJ,CADJ;AAeC;;AACD;AACA;AACA,uBACI;AAAI,kBAAA,SAAS,EAAC,cAAd;AAA6B,kBAAA,OAAO,EAAE,MAAI,CAACvE,eAA3C;AAA4D,kBAAA,GAAG,EAAEqE,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACK,MAAI,CAACP,aAAL,CAAmB,MAAI,CAACjE,KAAL,CAAWa,KAA9B,EAAqC2D,MAArC,CADL,CADJ;AAKC;AA/HL;AAiIH,SAlIA,CADL,CADJ;AAsIG;AACN;;;;EA9VetF,KAAK,CAACyF,S;;AAgW1B,eAAexF,OAAO,CAAC,UAAAc,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAAN,CAAP,CAAwBF,KAAxB,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Card, Button, ButtonToolbar, Tooltip, OverlayTrigger, Dropdown, Form, ButtonGroup} from 'react-bootstrap'\r\nimport fire from '../config/firebaseConfig'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Link from 'next/link'\r\n\r\nclass Entry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditable: false\r\n        }\r\n        this.toggleSelection = this.toggleSelection.bind(this);\r\n        this.toggleEditable = this.toggleEditable.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);\r\n    };\r\n    \r\n    copyToClipboard(values) {\r\n        let fullAddress = values.street + ', ' + values.city;\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    getDataValues(entry) {\r\n        switch (this.props.type) {\r\n            case 'tasks':\r\n                let options = { weekday: 'short', year: 'numeric', month: 'numeric', day: 'numeric' };\r\n                let date = entry.timestamp.toDate();\r\n                let statusIcon;\r\n                let statusMessage;\r\n                let fullAddressWithButtons = (\r\n                    <span>{entry.address +', '+ entry.city}<OverlayTrigger\r\n                        placement='top'\r\n                        overlay={\r\n                            <Tooltip>\r\n                            העתקת כתובת\r\n                            </Tooltip>\r\n                        }>\r\n                            <CopyToClipboard text={entry.address +', '+ entry.city}><a href={'#'+entry.id}><i style={{cursor: 'pointer'}} className=\"ml-2 far fa-clipboard nm\"></i></a>\r\n                            </CopyToClipboard>\r\n                        </OverlayTrigger>\r\n\r\n                        <OverlayTrigger\r\n                        placement='top'\r\n                        overlay={\r\n                            <Tooltip>\r\n                            חיפוש ב־Waze\r\n                            </Tooltip>\r\n                        }>\r\n                            <a target=\"_blank\" href={`https://waze.com/ul?q=` + entry.address +', '+ entry.city}><i style={{cursor: 'pointer'}} className=\"ml-2 fab fa-waze nm\"></i>\r\n                            </a>\r\n                        </OverlayTrigger></span>\r\n                )\r\n                if (entry.collected) {\r\n                    if (entry.reportFilled) {\r\n                        statusIcon = 'fas fa-calendar-check';\r\n                        statusMessage = 'בוצע ומושב';\r\n                    }\r\n                    else {\r\n                        statusIcon = 'far fa-calendar-check';\r\n                        statusMessage = 'בוצע ולא מושב';\r\n                    }\r\n                } else {\r\n                    if (entry.reportFilled) {\r\n                        statusIcon = 'fas fa-calendar-times';\r\n                        statusMessage = 'לא בוצע ומושב';\r\n                    } else {\r\n                        statusIcon = 'far fa-calendar-times';\r\n                        statusMessage = 'לא בוצע ולא מושב';\r\n                    }\r\n                }\r\n                return {\r\n                    tid: entry.id,\r\n                    date: date.toLocaleDateString('he-IL', options),\r\n                    time: date.getHours() + ':' + ('0'+date.getMinutes()).slice(-2),\r\n                    city: entry.city,\r\n                    name: entry.name,\r\n                    street: entry.address,\r\n                    fullAddress: entry.address + ', ' + entry.city,\r\n                    fullAddressWithButtons: fullAddressWithButtons,\r\n                    actions: 'ACTIONS',\r\n                    contactName: entry['contact name'],\r\n                    contactNumber: <a style={{whiteSpace: 'nowrap'}} href={'tel: '+ entry['contact number']}>{entry['contact number']}</a>,\r\n                    checkBox: this.props.isSelected ? <Form.Check custom checked label='' type='checkbox' /> : <Form.Check custom label='' type='checkbox' />,\r\n                    statusIcon: statusIcon,\r\n                    statusMessage: statusMessage\r\n                }\r\n            case 'users':\r\n                return {\r\n                    uid: entry.id,\r\n                    firstName: entry.firstName,\r\n                    lastName: entry.lastName,\r\n                    fullName: entry.firstName + '' + entry.lastName,\r\n                    region: entry.region,\r\n                    email: entry.email,\r\n                    phone: entry.phone,\r\n                    tz: entry.tz\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggleSelection() {\r\n        if (this.props.isSelectable) {\r\n            this.props.selectCallback(this.props.entry, !this.props.isSelected);\r\n        }\r\n    }\r\n\r\n    toggleEditable() {\r\n        this.setState({isEditable: !this.state.isEditable});\r\n    }\r\n\r\n    render() {\r\n        let buttons = [];\r\n        let nm = this.props.tableTasksCardView ? 'nm' : '';\r\n        switch (this.props.page) { \r\n            case 'assignedTasks':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_NOTES', entries: this.props.entry}),\r\n                        variant: 'outline-primary',\r\n                        text: <span><i className={\"far fa-sticky-note fa-fw \"+ nm}></i>{this.props.tableTasksCardView ? <br/> : ''}הערות</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_DONE', entries: this.props.entry}),\r\n                        variant: 'outline-primary',\r\n                        text: <span><i className={\"far fa-calendar-check fa-fw \"+ nm}></i>{this.props.tableTasksCardView ? <br/> : ''}בוצע</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_CANCEL', entries: this.props.entry }),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className={\"far fa-calendar-times fa-fw \"+ nm}></i>{this.props.tableTasksCardView ? <br/> : ''}הסרה</span>\r\n                    },\r\n                ];\r\n                break;\r\n            case 'taskReports':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REPORT_FILL', entries: this.props.entry }),\r\n                        variant: 'outline-primary',\r\n                        text: <span><i className={\"far fa-calendar-check fa-fw \"+ nm}></i>{this.props.tableTasksCardView ? <br/> : ''}דיווח</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REPORT_UNDONE' }),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className={\"far fa-calendar-times fa-fw \"+ nm}></i>{this.props.tableTasksCardView ? <br/> : ''}לא בוצע</span>\r\n                    },\r\n                ];\r\n                break;\r\n            case 'adminUsers':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'EDIT_USER', entries: this.props.entry}),\r\n                        variant: 'outline-primary',\r\n                        text: <span><i className=\"far fa-edit fa-fw\"></i>עריכה</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'RESET_PASSWORD', entries: this.props.entry}),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className=\"fas fa-unlock-alt fa-fw\"></i>איפוס סיסמה</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REMOVE_USER', entries: this.props.entry}),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className=\"far fa-trash-alt fa-fw\"></i>סגירת חשבון</span>\r\n                    }\r\n                ];\r\n                break;\r\n            case 'adminTasks':\r\n                buttons = [\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'EDIT_TASK', entries: this.props.entry}),\r\n                        variant: 'outline-primary',\r\n                        text: <span><i className=\"far fa-edit fa-fw\"></i>עריכה</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'TASK_STATUS', entries: this.props.entry}),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className=\"fas fa-question fa-fw\"></i>סטטוס</span>\r\n                    },\r\n                    {\r\n                        onClick: () => this.props.dispatch({ type: 'OPEN_MODAL', msg: 'REMOVE_TASK', entries: this.props.entry}),\r\n                        variant: 'outline-secondary',\r\n                        text: <span><i className=\"far fa-trash-alt fa-fw\"></i>מחיקה</span>\r\n                    }\r\n                ];\r\n                break;\r\n        }\r\n        if (this.props.tableTasksCardView) {\r\n            let values = this.getDataValues(this.props.entry);\r\n            let numButtons = 100/buttons.length;\r\n            let viewButtons = (\r\n                <ButtonGroup className=\"w-100 mt-4\">\r\n                    {buttons.map((button) => {\r\n                    return (\r\n                        <Button className={\"w-\"+numButtons} key={button.text} onClick={button.onClick} variant='outline-secondary'>{button.text}</Button>\r\n                        );\r\n                    })}\r\n                </ButtonGroup>\r\n            )\r\n            return (\r\n                <Card id={values.tid}>\r\n                    <Card.Header>\r\n                    {values.date}, {values.time}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Title>{values.name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{values.fullAddressWithButtons}\r\n\r\n                        \r\n                    </Card.Subtitle>\r\n                    <Card.Text>\r\n                        <div className='mt-4'>{values.contactName}</div>\r\n                        <div>{values.contactNumber}</div>\r\n                        {viewButtons}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n            );\r\n        } else {\r\n        return (\r\n            <tr className={(this.props.isSelected ? 'table-primary' : '') + (this.props.isSelectable ? ' entry-selectable' : '')}>\r\n                {this.props.tableColumns.map((column) => {\r\n                    switch (column) {\r\n                        case 'actions':\r\n                        {\r\n                            switch (this.props.page){\r\n                                case 'assignedTasks':\r\n                                        return (\r\n                                            <td className=\"align-middle\" key={column}>\r\n                                            <span style={{whiteSpace: 'nowrap'}}><Dropdown width='200'>\r\n                                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                                    פעולות\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                {buttons.map((button) => {\r\n                                                        return (\r\n                                                            <Dropdown.Item key={button.text} onClick={button.onClick}>\r\n                                                            {button.text}\r\n                                                            </Dropdown.Item>\r\n                                                            );\r\n                                                        })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown></span>\r\n                                            </td>\r\n                                            );\r\n                                    \r\n                                case 'adminUsers':\r\n                                    return (\r\n                                    <td className=\"align-middle\" key={column}>\r\n                                    <span style={{whiteSpace: 'nowrap'}}>\r\n                                        <Dropdown width='200'>\r\n                                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                                פעולות\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                            {buttons.map((button) => {\r\n                                            return (\r\n                                                <Dropdown.Item key={button.text} onClick={button.onClick}>\r\n                                                {button.text}\r\n                                                </Dropdown.Item>\r\n                                                );\r\n                                            })}\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </span>\r\n                                    </td>\r\n                                    );\r\n                                case 'adminTasks':\r\n                                        return <td className=\"align-middle\" key={column}>\r\n                                        <span style={{whiteSpace: 'nowrap'}}>\r\n                                            <Dropdown width='200'>\r\n                                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                                    פעולות\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                {buttons.map((button) => {\r\n                                                return (\r\n                                                    <Dropdown.Item key={button.text} onClick={button.onClick}>\r\n                                                    {button.text}\r\n                                                    </Dropdown.Item>\r\n                                                    );\r\n                                                })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </td>;\r\n                                case 'taskReports':\r\n                                    return (\r\n                                    <td className=\"align-middle\" key={column}>\r\n                                        <span style={{whiteSpace: 'nowrap'}}>\r\n                                            <Dropdown width='200'>\r\n                                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                                    פעולות\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    {buttons.map((button) => {\r\n                                                    return (\r\n                                                        <Dropdown.Item key={button.text} onClick={button.onClick}>\r\n                                                        {button.text}\r\n                                                        </Dropdown.Item>\r\n                                                        );\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </td>\r\n                                    );\r\n                                default:\r\n                                    return (\r\n                                        <td className=\"align-middle\" key={column}>\r\n                                            <ButtonGroup>\r\n                                                {buttons.map((button) => {\r\n                                                return (\r\n                                                    <Button key={button.text} onClick={button.onClick} variant={button.variant}>{button.text}</Button>\r\n                                                    );\r\n                                                })}\r\n                                            </ButtonGroup>\r\n                                        </td>\r\n                                        );\r\n                            }\r\n                        }\r\n                        case 'status':\r\n                        {\r\n                        let values = this.getDataValues(this.props.entry);\r\n                        let message = values.statusMessage;\r\n                        let icon = values.statusIcon;\r\n                        return (\r\n                            <td className=\"align-middle\" key={column}>\r\n                                <ButtonToolbar>\r\n                                    <OverlayTrigger\r\n                                    placement='left'\r\n                                    overlay={\r\n                                        <Tooltip>\r\n                                        {message}\r\n                                        </Tooltip>\r\n                                    }>\r\n                                    <i className={icon}></i>\r\n                                    </OverlayTrigger>\r\n                                </ButtonToolbar>\r\n                            </td>\r\n                        );\r\n                        }\r\n                        default:\r\n                        {\r\n                        return (\r\n                            <td className=\"align-middle\" onClick={this.toggleSelection} key={column}>\r\n                                {this.getDataValues(this.props.entry)[column]}\r\n                            </td>\r\n                        );\r\n                        }\r\n                    }\r\n                })}\r\n            </tr>\r\n        );}\r\n    }\r\n}\r\nexport default connect(state => state)(Entry);"]},"metadata":{},"sourceType":"module"}