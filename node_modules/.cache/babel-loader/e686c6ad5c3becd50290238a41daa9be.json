{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\mwilchek\\\\Documents\\\\GitHub\\\\leketgo\\\\pages\\\\_app.js\";\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from 'next-redux-wrapper';\nimport axios from 'axios';\nimport fire from '../config/firebaseConfig';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GETTASKSLIST':\n      return _objectSpread({}, state, {\n        tasks: [action.taskList]\n      });\n      break;\n\n    case 'LOGIN':\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        loginErr: false,\n        firebaseData: action.user\n      });\n      break;\n\n    case 'LOGIN_ERR':\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        loginErr: action.msg\n      });\n      break;\n\n    case 'LOGOUT':\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        firebaseData: false\n      });\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nvar initialState = {\n  loginErr: false,\n  isLoggedIn: fire.auth().isLoggedIn ? true : false,\n  isManager: true,\n  userData: {\n    userId: 123456789,\n    firstName: 'בר',\n    lastName: 'עמיר',\n    region: 'ראשון לציון',\n    email: 'baramir@mail.tau.ac.il',\n    phone: '0523668566'\n  },\n  tasks: []\n};\n\nvar makeStore = function makeStore(initialState, options) {\n  return createStore(reducer, initialState);\n};\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp(props) {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                axios.get('http://localhost:5000/api/get_tasks').then(function (response) {\n                  ctx.store.dispatch({\n                    type: 'GETTASKSLIST',\n                    taskList: response\n                  });\n                });\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 8:\n                _context.t0 = {};\n\n              case 9:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:\\Users\\mwilchek\\Documents\\GitHub\\leketgo\\pages\\_app.js"],"names":["React","createStore","Provider","App","Container","withRedux","axios","fire","reducer","state","initialState","action","type","tasks","taskList","isLoggedIn","loginErr","firebaseData","user","msg","auth","isManager","userData","userId","firstName","lastName","region","email","phone","makeStore","options","MyApp","props","Component","pageProps","store","ctx","get","then","response","dispatch","getInitialProps"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {createStore} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport App, {Container} from \"next/app\"\r\nimport withRedux from 'next-redux-wrapper'\r\nimport axios from 'axios'\r\nimport fire from '../config/firebaseConfig'\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GETTASKSLIST':\r\n            return {...state, tasks: [action.taskList]};\r\n            break;\r\n        case 'LOGIN':\r\n            return { ...state, isLoggedIn: true, loginErr: false, firebaseData: action.user };\r\n            break;\r\n        case 'LOGIN_ERR':\r\n            return { ...state, isLoggedIn: false, loginErr: action.msg};\r\n            break;\r\n        case 'LOGOUT':\r\n            return { ...state, isLoggedIn: false, firebaseData: false};\r\n            break;\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n};\r\n\r\nvar initialState = {\r\n    loginErr: false,\r\n    isLoggedIn: fire.auth().isLoggedIn ? true : false,\r\n    isManager: true,\r\n    userData: {\r\n        userId: 123456789,\r\n        firstName: 'בר',\r\n        lastName: 'עמיר',\r\n        region: 'ראשון לציון',\r\n        email: 'baramir@mail.tau.ac.il',\r\n        phone: '0523668566'\r\n    },\r\n    tasks: []\r\n}\r\n\r\n\r\nconst makeStore = (initialState, options) => {\r\n    return createStore(reducer, initialState);\r\n};\r\n\r\nclass MyApp extends App {\r\n    constructor(props) {\r\n        super(props);        \r\n    }\r\n\r\n    static async getInitialProps({Component, ctx}) {\r\n        axios.get('http://localhost:5000/api/get_tasks').then((response) => \r\n        {         \r\n            ctx.store.dispatch({type: 'GETTASKSLIST', taskList: response});\r\n        });\r\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n        return {pageProps};\r\n    }\r\n\r\n    render() {\r\n        const {Component, pageProps, store} = this.props;\r\n        return (\r\n            <Container>\r\n                <Provider store={store}>\r\n                    <Component {...pageProps} />\r\n                </Provider>               \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}