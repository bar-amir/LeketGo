{"ast":null,"code":"import fire from '../config/firebaseConfig';\nimport XLSX from 'xlsx';\nexport default function handleFileUpload(file) {\n  var reader = new FileReader();\n\n  reader.onload = function (evt) {\n    var bstr = evt.target.result;\n    var wb = XLSX.read(bstr, {\n      type: 'binary'\n    });\n    var wsname = wb.SheetNames[0];\n    var ws = wb.Sheets[wsname];\n    var data = XLSX.utils.sheet_to_csv(ws, {\n      header: 1\n    });\n    addTasksToDB(data);\n    console.log(\"Data from file was read succesfully.\");\n  };\n\n  reader.readAsBinaryString(file);\n  console.log(file);\n}\n\nfunction addTasksToDB(data) {\n  var taskCollection = fire.firestore().collection('tasks');\n  var rows = data.split(/[\\r\\n|\\n]+/);\n\n  for (var i = 1; i < rows.length; i++) {\n    var row = text2arr(rows[i]);\n    console.log(row);\n    var timeStamp = fire.Timestamp.fromDate(new Date(row[2] + 'T' + row[3]));\n    taskCollection.doc(row[0] + '-' + row[2]).set({\n      // row[0]-taskID, row[2]-date. create unique id for each task.\n      name: row[1],\n      timestamp: timeStamp,\n      city: row[4],\n      address: row[5],\n      \"contact number\": row[6],\n      \"contact name\": row[7],\n      notes: row[8],\n      region: row[9],\n      longitude: row[10] == \"\" ? \"\" : Number(row[10]),\n      latitude: row[11] == \"\" ? \"\" : Number(row[11]),\n      volunteerUid: null,\n      reportFilled: false,\n      collected: false\n    });\n  }\n}\n\nfunction text2arr(text) {\n  var arr = [];\n  var cell = '';\n  var between = false;\n\n  for (var i = 0; i < text.length; i++) {\n    if (text[i] == '\"') {\n      between = !between;\n    } else {\n      if (text[i] == ',') {\n        if (between) {\n          cell += text[i];\n        } else {\n          arr.push(cell);\n          cell = '';\n        }\n      } else {\n        cell += text[i];\n      }\n    }\n  }\n\n  arr.push(cell);\n  return arr;\n}","map":{"version":3,"sources":["C:\\Users\\Oz\\Desktop\\leket\\leket\\dbActions\\addTasksFromFile.js"],"names":["fire","XLSX","handleFileUpload","file","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_csv","header","addTasksToDB","console","log","readAsBinaryString","taskCollection","firestore","collection","rows","split","i","length","row","text2arr","timeStamp","Timestamp","fromDate","Date","doc","set","name","timestamp","city","address","notes","region","longitude","Number","latitude","volunteerUid","reportFilled","collected","text","arr","cell","between","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC1C,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,GAAD,EAAS;AACrB,QAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAxB;AACA,QAAMC,EAAE,GAAGV,IAAI,CAACW,IAAL,CAAUJ,IAAV,EAAgB;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAX;AAEA,QAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;AACA,QAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;AAEA,QAAMI,IAAI,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,YAAX,CAAwBJ,EAAxB,EAA4B;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAA5B,CAAb;AACAC,IAAAA,YAAY,CAACJ,IAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH,GAVD;;AAWApB,EAAAA,MAAM,CAACqB,kBAAP,CAA0BtB,IAA1B;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACH;;AAED,SAASmB,YAAT,CAAsBJ,IAAtB,EAA4B;AACxB,MAAMQ,cAAc,GAAG1B,IAAI,CAAC2B,SAAL,GAAiBC,UAAjB,CAA4B,OAA5B,CAAvB;AACA,MAAIC,IAAI,GAAGX,IAAI,CAACY,KAAL,CAAW,YAAX,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAIE,GAAG,GAAGC,QAAQ,CAACL,IAAI,CAACE,CAAD,CAAL,CAAlB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA,QAAIE,SAAS,GAAGnC,IAAI,CAACoC,SAAL,CAAeC,QAAf,CAAwB,IAAIC,IAAJ,CAASL,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAA3B,CAAxB,CAAhB;AACAP,IAAAA,cAAc,CAACa,GAAf,CAAmBN,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAArC,EAA0CO,GAA1C,CAA8C;AAAM;AAChDC,MAAAA,IAAI,EAAER,GAAG,CAAC,CAAD,CADiC;AAE1CS,MAAAA,SAAS,EAAEP,SAF+B;AAG1CQ,MAAAA,IAAI,EAAEV,GAAG,CAAC,CAAD,CAHiC;AAI1CW,MAAAA,OAAO,EAAEX,GAAG,CAAC,CAAD,CAJ8B;AAK1C,wBAAkBA,GAAG,CAAC,CAAD,CALqB;AAM1C,sBAAgBA,GAAG,CAAC,CAAD,CANuB;AAO1CY,MAAAA,KAAK,EAAEZ,GAAG,CAAC,CAAD,CAPgC;AAQ1Ca,MAAAA,MAAM,EAAEb,GAAG,CAAC,CAAD,CAR+B;AAS1Cc,MAAAA,SAAS,EAAGd,GAAG,CAAC,EAAD,CAAH,IAAW,EAAZ,GAAkB,EAAlB,GAAuBe,MAAM,CAACf,GAAG,CAAC,EAAD,CAAJ,CATE;AAU1CgB,MAAAA,QAAQ,EAAGhB,GAAG,CAAC,EAAD,CAAH,IAAW,EAAZ,GAAkB,EAAlB,GAAuBe,MAAM,CAACf,GAAG,CAAC,EAAD,CAAJ,CAVG;AAW1CiB,MAAAA,YAAY,EAAE,IAX4B;AAY1CC,MAAAA,YAAY,EAAE,KAZ4B;AAa1CC,MAAAA,SAAS,EAAE;AAb+B,KAA9C;AAeH;AACJ;;AAED,SAASlB,QAAT,CAAkBmB,IAAlB,EAAwB;AACpB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,IAAI,CAACrB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAIsB,IAAI,CAACtB,CAAD,CAAJ,IAAW,GAAf,EAAoB;AAChByB,MAAAA,OAAO,GAAG,CAACA,OAAX;AACH,KAFD,MAEO;AACH,UAAIH,IAAI,CAACtB,CAAD,CAAJ,IAAW,GAAf,EAAoB;AAChB,YAAIyB,OAAJ,EAAa;AACTD,UAAAA,IAAI,IAAIF,IAAI,CAACtB,CAAD,CAAZ;AACH,SAFD,MAEO;AACHuB,UAAAA,GAAG,CAACG,IAAJ,CAASF,IAAT;AACAA,UAAAA,IAAI,GAAG,EAAP;AACH;AACJ,OAPD,MAOO;AACHA,QAAAA,IAAI,IAAIF,IAAI,CAACtB,CAAD,CAAZ;AACH;AACJ;AACJ;;AACDuB,EAAAA,GAAG,CAACG,IAAJ,CAASF,IAAT;AACA,SAAOD,GAAP;AACH","sourcesContent":["import fire from '../config/firebaseConfig';\r\nimport XLSX from 'xlsx';\r\n\r\nexport default function handleFileUpload(file){\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (evt) => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n        addTasksToDB(data);\r\n        console.log(\"Data from file was read succesfully.\");\r\n    };\r\n    reader.readAsBinaryString(file);\r\n    console.log(file);\r\n}\r\n\r\nfunction addTasksToDB(data) {\r\n    const taskCollection = fire.firestore().collection('tasks');\r\n    var rows = data.split(/[\\r\\n|\\n]+/);\r\n    for (let i = 1; i < rows.length; i++) {\r\n        var row = text2arr(rows[i]);\r\n        console.log(row);\r\n        var timeStamp = fire.Timestamp.fromDate(new Date(row[2] + 'T' + row[3]));\r\n        taskCollection.doc(row[0] + '-' + row[2]).set({     // row[0]-taskID, row[2]-date. create unique id for each task.\r\n            name: row[1],\r\n            timestamp: timeStamp,\r\n            city: row[4],\r\n            address: row[5],\r\n            \"contact number\": row[6],\r\n            \"contact name\": row[7],\r\n            notes: row[8],\r\n            region: row[9],\r\n            longitude: (row[10] == \"\") ? \"\" : Number(row[10]),\r\n            latitude: (row[11] == \"\") ? \"\" : Number(row[11]),\r\n            volunteerUid: null,\r\n            reportFilled: false,\r\n            collected: false\r\n        });\r\n    }\r\n}\r\n\r\nfunction text2arr(text) {\r\n    var arr = [];\r\n    var cell = '';\r\n    var between = false;\r\n    for (let i = 0; i < text.length; i++) {\r\n        if (text[i] == '\"') {\r\n            between = !between;\r\n        } else {\r\n            if (text[i] == ',') {\r\n                if (between) {\r\n                    cell += text[i];\r\n                } else {\r\n                    arr.push(cell);\r\n                    cell = '';\r\n                }\r\n            } else {\r\n                cell += text[i];\r\n            }\r\n        }\r\n    }\r\n    arr.push(cell);\r\n    return arr;\r\n}"]},"metadata":{},"sourceType":"module"}